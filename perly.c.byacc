#ifndef lint
static char yysccsid[] = "@(#)yaccpar 1.8 (Berkeley) 01/20/91";
#endif
#define YYBYACC 1
#line 39 "perly.y"
#include "EXTERN.h"
#include "perl.h"

/*SUPPRESS 530*/
/*SUPPRESS 593*/
/*SUPPRESS 595*/

#line 50 "perly.y"
typedef union {
    I32	ival;
    char *pval;
    OP *opval;
    GV *gvval;
} YYSTYPE;
#line 21 "y.tab.c"
#define WORD 257
#define METHOD 258
#define THING 259
#define PMFUNC 260
#define PRIVATEREF 261
#define LABEL 262
#define FORMAT 263
#define SUB 264
#define PACKAGE 265
#define WHILE 266
#define UNTIL 267
#define IF 268
#define UNLESS 269
#define ELSE 270
#define ELSIF 271
#define CONTINUE 272
#define FOR 273
#define LOOPEX 274
#define DOTDOT 275
#define FUNC0 276
#define FUNC1 277
#define FUNC 278
#define RELOP 279
#define EQOP 280
#define MULOP 281
#define ADDOP 282
#define DOLSHARP 283
#define DO 284
#define LOCAL 285
#define DELETE 286
#define HASHBRACK 287
#define LSTOP 288
#define OROR 289
#define ANDAND 290
#define BITOROP 291
#define BITANDOP 292
#define UNIOP 293
#define SHIFTOP 294
#define MATCHOP 295
#define ARROW 296
#define UMINUS 297
#define REFGEN 298
#define POWOP 299
#define PREINC 300
#define PREDEC 301
#define POSTINC 302
#define POSTDEC 303
#define YYERRCODE 256
short yylhs[] = {                                        -1,
   30,    0,    7,    3,    8,    8,    8,    9,    9,    9,
    9,   23,   23,   23,   23,   23,   23,   13,   13,   13,
   11,   11,   11,   11,   29,   29,   10,   10,   10,   10,
   10,   10,   10,   10,   12,   12,   26,   26,   28,   28,
    1,    1,    1,    2,    2,   31,   32,   32,   14,   14,
   27,   27,   27,   27,   27,   27,   27,   27,   15,   15,
   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
   15,   15,   15,   15,   15,   15,   15,   15,   15,   15,
   15,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   16,   16,   16,   16,   16,   16,
   16,   16,   16,   16,   16,   24,   24,   22,   17,   18,
   19,   20,   21,   25,   25,   25,   25,    4,    4,    5,
    5,    6,    6,
};
short yylen[] = {                                         2,
    0,    2,    4,    0,    0,    2,    2,    2,    1,    2,
    3,    1,    1,    3,    3,    3,    3,    0,    2,    6,
    6,    6,    4,    4,    0,    2,    7,    7,    5,    5,
    8,    7,   10,    3,    0,    1,    0,    1,    0,    1,
    1,    1,    1,    3,    2,    3,    3,    2,    3,    1,
    3,    5,    4,    6,    6,    3,    2,    4,    3,    4,
    4,    4,    4,    4,    4,    4,    4,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    5,    3,
    1,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    3,    2,    3,    2,    3,    3,    1,    1,    4,
    5,    1,    1,    1,    5,    6,    6,    5,    4,    5,
    6,    8,    1,    1,    3,    4,    2,    2,    4,    5,
    4,    5,    1,    2,    1,    2,    2,    1,    3,    3,
    4,    4,    6,    1,    1,    0,    1,    2,    2,    2,
    2,    2,    2,    1,    1,    1,    1,    2,    1,    2,
    1,    3,    2,
};
short yydefred[] = {                                      1,
    0,    5,    0,   40,    0,    0,    0,    6,   41,    7,
    9,    0,   42,   43,    4,    0,   45,    0,    0,   48,
   12,    0,    0,  113,    0,  147,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   10,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    8,    0,
    0,    0,    0,    0,  102,  104,   99,    0,    0,    0,
  135,    5,   44,   46,   47,  144,  146,  145,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  124,    0,    0,    0,  142,    0,  118,    0,    0,    0,
    0,    0,    0,    0,    0,   57,    0,  126,    0,    0,
    0,    0,   89,   90,    0,    0,    0,    0,   95,    0,
  138,  139,  140,  141,  143,    0,   34,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   87,   88,    0,
    0,    0,    0,    0,   11,    0,    0,   56,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   36,    0,  129,  130,    0,    0,    0,    0,    0,    0,
    0,   97,    0,    0,   96,   51,    0,  149,    0,    0,
    0,  151,   94,   26,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  115,    0,
    0,    0,    3,  132,    0,    0,   29,    0,   30,    0,
    0,    0,   23,    0,   24,    0,    0,    0,  131,   58,
    0,  119,    0,  121,    0,    0,    0,    0,  153,    0,
  148,    0,  150,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  100,    0,  109,  116,
    0,   53,    0,    0,    0,    0,   19,    0,    0,    0,
    0,    0,   52,  120,  122,    0,    0,  152,  108,    0,
    0,    0,    0,  101,  105,  110,    0,  133,   27,   28,
   21,    0,   22,    0,   32,    0,    0,  111,  107,  106,
   55,   54,    0,    0,   31,    0,    0,    0,  112,   20,
   33,
};
short yydgoto[] = {                                       1,
    8,    9,   72,  190,  193,  185,   77,    3,   10,   11,
   59,  169,  243,  105,   61,   62,   63,   64,   65,   66,
   67,   68,  171,  106,   70,  161,   71,   12,  127,    2,
   13,   14,
};
short yysindex[] = {                                      0,
    0,    0,  -17,    0, -120, -239,  -58,    0,    0,    0,
    0,  620,    0,    0,    0,  -93,    0,  -93,  -21,    0,
    0,    0,  -20,    0,    7,    0,  -30,  -28,  -26,  -23,
   -9, -172,   23,   86,  143,  -20, 2759, 2804,   24,  886,
 2804, 2804, 2804, 2804, 2804, 2804, 2804,  931,    0, 2804,
 2804,  997,  -20,  -20,  -20,  -20,  -20,  -96,    0,   94,
 3685,  -73,  -82,  -71,    0,    0,    0,  149,  139,  -92,
    0,    0,    0,    0,    0,    0,    0,    0, 2804, 2804,
 2804,  -93, 2804,  -93, 2804,  -93, 2804,  -93, 1197,  171,
    0,  185, 1263, 2804,    0,  180,    0,  -94,  -32,  -94,
  192,  111,  119,   80,  188,    0, 1308,    0,  -94, -100,
 -100, -100,    0,    0,  165,  108, -100, -100,    0,  -39,
    0,    0,    0,    0,    0,  -93,    0, 2804, 2804, 2804,
 2804, 2804, 2804, 2804, 2804, 1368, 1574, 2804, 2804, 1634,
 1679, 1745, 1948, 2011, 2804, 2056,  -87,    0,    0, 2804,
 2804, 2804, 2804, 2119,    0, -216, -119,    0, 4405,  188,
  219,  -96,  210,  -96,  214,   -3,  225,   -3,  220,   84,
    0, 2804,    0,    0,  234,  239, 1308, 2322, 2385,  172,
 2804,    0, 2430,  169,    0,    0, 2804,    0, 2493,  197,
 2696,    0,    0,    0,  188,  188,  188,  188, 3685,  699,
  -94,  295, 2804, -194, 2804, -225, 3685, 4320, 2804,  269,
 2804,  330, 2804,  393, 2804,  230, 2804, -253,    1, 2804,
    1, 2804,  261, 2804,  107,  -11,  115,   -4,    0,  108,
  263, 2804,    0,    0, 2804,  -93,    0,  -93,    0,  -93,
  -93,  270,    0,  -93,    0, 2804,  -93,  108,    0,    0,
  273,    0,  108,    0,  108, 2804,  133,  190,    0,    5,
    0, 2804,    0, 3685, 3685, 2804, 3685, 3685, 3685, 3685,
 3685, 3685,  134, 2804,    6,  196,    0,  199,    0,    0,
 2804,    0, 3169,  -96,  -96,   -3,    0, 2804,   -3,  266,
  -96,  -93,    0,    0,    0,  136,  201,    0,    0,   29,
  -18,  216,  281,    0,    0,    0,  301,    0,    0,    0,
    0,  249,    0, 1197,    0,  -96,  218,    0,    0,    0,
    0,    0,  -93,  305,    0,  324,   -3,  -93,    0,    0,
    0,
};
short yyrindex[] = {                                      0,
    0,    0,  449,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  494,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   17, 2840,    0,    0,    0,    0,    0,    0,    0,
 2878, 2946,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   71,    0,  -15,
  375, 4354,  555, 2990,    0,    0,    0, 3035,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0, 2878,    0,
  325,    0,    0,    0,    0,    0,    0,    0,  309,    0,
    0,    0,    0,  329,    0, 3138,    0, 3762, 3203, 3800,
    0,    0,    0,    0, 3329,    0, 3394,    0, 3839, 4095,
 4163, 4203,    0,    0, 3250,    0, 4256, 4295,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  826,    0,    0,   -2,
    0,  127,    0,  127,    0,  179,    0,  179,    0,  314,
    0,    0,    0,    0,    0,    0,  329,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0, 3291,
    0,    0,    0,    0,   77,   88,   99,  109, 1460,  899,
 3900, 1092,    0, 3585,    0, 3646, 1901,    0,    0, 2217,
    0, 1469,    0, 3910,    0, 1840,    0, 3719, 3463,    0,
 3506,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 2878,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  315,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 2398, 2591,    0, 3097, 3107, 3547, 3991,
 4002, 4041,    0,  329,    0,    0,    0,    0,    0,    0,
  329,    0,    0,  127,  127,  179,    0,    0,  179,    0,
  127,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  365,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  334,    0,  127,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  179,    0,    0,    0,
    0,
};
short yygindex[] = {                                      0,
    0,    0,    0, -136,    0,    0,   -5,  304,    0,    0,
    0,   63, -166,    3, 4588,  163,  465,    0,    0,    0,
    0,    0,  366,    8,   12,  135,    0,    0, -143,    0,
    0,    0,
};
#define YYTABLESIZE 4854
short yytable[] = {                                      17,
   20,  245,   15,  224,  191,  233,   58,  179,  151,   81,
   73,   83,   74,   85,   60,   54,   87,   18,  237,  153,
  239,   82,   84,   86,   88,   13,   54,  136,  137,   15,
   89,   97,  132,  247,   79,  222,  108,   75,   38,  132,
  150,  145,  104,   13,  139,  146,   80,   95,  132,  132,
  116,  152,  107,  192,  120,  136,   38,  123,  151,   54,
  123,  231,   92,  101,  121,  122,  123,  124,  125,  145,
   25,  232,  132,  146,  123,  123,  162,  123,  164,  123,
  166,  277,  168,  160,   91,  163,  158,  165,  279,  167,
  150,  170,   15,  280,   15,  175,   15,  299,  304,   15,
  145,  176,   15,   25,  146,  177,   25,   25,   25,  123,
   25,  292,   25,   25,  186,   25,  294,   16,  295,  311,
  194,  319,  313,  183,  188,   93,   25,  189,   17,   25,
  195,  196,  197,  198,   25,   16,   16,  132,  184,   14,
  309,  310,    4,    5,    6,    7,   17,  315,  188,   15,
  132,  189,  225,  226,  227,  228,  230,   14,  132,   25,
  330,   25,   25,   25,   25,  276,   25,   15,   25,   25,
  223,   25,  325,  278,  248,  126,  132,  132,   18,  132,
  253,  255,   94,  257,  251,   25,  136,  137,  154,  260,
   25,  297,  302,   25,  317,   25,   25,  155,   19,  144,
  145,  148,  149,  156,  146,  110,  111,  112,  113,  114,
  172,   18,  117,  118,   18,   18,   18,   25,   18,  178,
   18,   18,  147,   18,  273,  173,  275,   54,  148,  149,
  284,  132,  285,  181,  286,  287,   76,   18,  289,  282,
   26,  291,   18,  182,    4,    5,    6,    7,  160,   25,
  238,   25,   25,  132,  240,  187,  133,  132,  296,  236,
  134,  135,  136,  137,  300,  244,  241,  242,  132,   18,
  140,  141,  142,  143,  249,  144,  145,  132,  246,  250,
  146,  303,  123,  123,  123,  123,  316,  262,  307,  323,
  312,  123,  132,  259,  256,  123,  123,  123,  123,  146,
  274,   18,  281,   18,   18,  123,  123,  123,  123,  288,
  123,  123,  123,  293,  298,  123,   60,  327,  123,  123,
  305,  321,  331,  306,  314,  318,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
  320,  322,  326,   25,   25,  328,   25,   25,   25,  128,
  129,  130,  131,   25,   25,   25,   25,   25,   25,  128,
  129,  130,  131,   25,  329,   37,  146,   35,   25,  136,
   25,   25,   13,   37,   35,  157,  324,   69,    0,    0,
  290,    0,   25,   25,   25,   25,   25,   25,   25,   25,
   25,   25,   25,   25,   25,   25,    0,    0,    0,   25,
   25,    0,   25,   25,   25,   79,    0,    0,   79,   25,
   25,   25,   25,   25,   25,   50,    0,    0,   50,   25,
    0,    0,   79,   79,   25,   79,   25,   25,    0,    0,
    0,    0,   50,   50,   18,   18,   18,   18,   18,   18,
   18,   18,   18,   18,   18,   18,   18,   18,    2,    0,
    0,   18,   18,    0,   18,   18,   18,   79,    0,    0,
    0,   18,   18,   18,   18,   18,   18,   50,    0,    0,
    0,   18,    0,    0,    0,    0,   18,    0,   18,   18,
    0,   39,    0,    0,   39,   39,   39,   78,   39,    0,
   39,   39,    0,   39,    0,   90,    0,    0,    0,    0,
   78,   99,    0,  102,    0,    0,    0,   39,  134,  135,
  136,  137,   39,    0,    0,    0,    0,   78,   78,   78,
   78,   78,    0,  144,  145,    0,  144,    0,  146,  144,
  144,  144,    0,  144,  134,  144,  144,  134,  144,   39,
    0,    0,    0,    0,    0,    0,    0,  134,  135,  136,
  137,  134,  134,    0,  134,    0,  134,  144,  141,  142,
  143,    0,  144,  145,    0,  180,    0,  146,    0,    0,
    0,   39,    0,  134,   39,  136,  137,    0,    0,    0,
    0,    0,    0,    0,  144,    0,  134,  145,  144,  145,
  145,  145,  145,  146,  145,   98,  145,  145,   98,  145,
    0,    0,    0,    0,    0,    0,    0,    0,  134,  135,
  136,  137,   98,   98,    0,   98,  144,   98,  145,  144,
  142,  143,    0,  144,  145,    0,    0,    0,  146,    0,
   79,   79,   79,   79,    0,    0,    0,    0,    0,    0,
   50,   50,   50,   50,    0,    0,    0,   98,    0,    0,
    0,    0,   43,    0,    0,   54,   56,   53,    0,   48,
   79,   57,   51,    0,   50,    0,   79,   79,    0,    0,
   50,  134,  135,  136,  137,    0,   50,   50,   49,    0,
  145,    0,    0,   55,  143,    0,  144,  145,    0,    0,
    0,  146,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   39,   39,   39,   39,   39,   39,
   52,    0,    0,    0,   39,   39,   39,   39,    0,    0,
    0,   39,   39,    0,   39,   39,   39,    0,    0,    0,
    0,   39,   39,   39,   39,   39,   39,    0,    0,    0,
    0,   39,   15,    0,    0,   44,   39,    0,   39,   39,
  144,  144,  144,  144,  144,    0,    0,    0,    0,  134,
  134,  134,  134,    0,    0,    0,    0,  144,  134,  144,
  144,  144,  134,  134,  134,  134,  144,  144,  144,  144,
  144,  144,  134,  134,  134,  134,  144,  134,  134,  134,
    0,  144,  134,  144,  144,  134,  134,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  145,  145,  145,  145,  145,    0,    0,    0,    0,
   98,   98,   98,   98,    0,    0,    0,    0,  145,   98,
  145,  145,  145,   98,   98,   98,   98,  145,  145,  145,
  145,  145,  145,   98,   98,   98,   98,  145,   98,   98,
   98,    0,  145,   98,  145,  145,   98,   98,   39,    0,
    0,   39,   39,   39,    0,   39,    0,   39,   39,    0,
   39,    0,    0,    0,    0,   21,   22,   23,   24,   25,
   26,    0,    0,    0,   39,   27,   28,   29,   30,   39,
    0,    0,   31,   32,    0,   33,   34,   35,    0,    0,
    0,    0,   36,   37,   38,   39,   40,   41,    0,    0,
    0,    0,   42,    0,    0,    0,   39,   45,   43,   46,
   47,   54,   56,   53,    0,   48,    0,   57,   51,    0,
   50,    0,    0,    0,    0,    0,    0,    0,    0,   76,
    0,    0,   76,    0,  103,    0,    0,    0,   39,   55,
    0,   39,    0,    0,    0,    0,   76,   76,    0,   76,
    0,   76,    0,   43,    0,    0,   54,   56,   53,    0,
   48,  115,   57,   51,    0,   50,   52,  134,  135,  136,
  137,    0,    0,    0,    0,    0,    0,  140,  141,  142,
  143,   76,  144,  145,   55,    0,    0,  146,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   15,    0,
    0,   44,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   52,    0,    0,    0,    0,    0,    0,    0,   43,
    0,    0,   54,   56,   53,    0,   48,    0,   57,   51,
    0,   50,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   15,    0,    0,   44,    0,    0,    0,
   55,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   39,   39,   39,   39,   39,   39,   52,    0,  119,
    0,   39,   39,   39,   39,    0,    0,    0,   39,   39,
    0,   39,   39,   39,    0,    0,    0,    0,   39,   39,
   39,   39,   39,   39,    0,    0,    0,    0,   39,   15,
    0,    0,   44,   39,    0,   39,   39,    0,    0,    0,
    0,    0,   73,    0,    0,   73,    0,    0,    0,    0,
    0,    0,   22,   23,   24,   25,   26,    0,    0,   73,
   73,    0,   73,    0,   73,    0,    0,    0,    0,   32,
    0,   33,   34,   35,   76,   76,   76,   76,   36,   37,
   38,   39,   40,   41,    0,    0,    0,    0,   42,    0,
    0,    0,    0,   45,   73,   46,   47,   22,   23,   24,
   25,   26,    0,    0,   76,    0,    0,    0,    0,    0,
   76,   76,    0,    0,   32,    0,   33,   34,   35,    0,
    0,    0,    0,   36,   37,   38,   39,   40,   41,    0,
    0,    0,    0,   42,    0,    0,    0,    0,   45,   43,
   46,   47,   54,   56,   53,    0,   48,    0,   57,   51,
    0,   50,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   22,   23,   24,   25,   26,    0,    0,
   55,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   32,    0,   33,   34,   35,    0,    0,    0,    0,   36,
   37,   38,   39,   40,   41,    0,    0,   52,    0,   42,
    0,    0,    0,    0,   45,   43,   46,   47,   54,   56,
   53,    0,   48,  174,   57,   51,    0,   50,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   15,
    0,    0,   44,    0,    0,    0,   55,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   43,    0,    0,   54,   56,   53,    0,   48,    0,   57,
   51,    0,   50,   52,    0,    0,    0,   73,   73,   73,
   73,    0,    0,    0,    0,    0,   73,    0,    0,    0,
    0,   55,    0,    0,    0,    0,    0,    0,    0,    0,
   73,   73,   73,   73,    0,   15,    0,   73,   44,    0,
    0,    0,    0,   73,   73,    0,    0,    0,   52,    0,
   43,    0,    0,   54,   56,   53,    0,   48,    0,   57,
   51,    0,   50,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  203,    0,
   15,   55,    0,   44,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   21,   22,   23,   24,   25,   26,   52,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   32,    0,   33,   34,   35,    0,    0,    0,    0,   36,
   37,   38,   39,   40,   41,    0,    0,    0,    0,   42,
   15,    0,    0,   44,   45,    0,   46,   47,    0,    0,
   49,    0,    0,   49,    0,    0,    0,    0,    0,   77,
    0,    0,   77,    0,    0,    0,    0,   49,   49,   22,
   23,   24,   25,   26,    0,    0,   77,   77,    0,   77,
    0,   77,    0,    0,    0,    0,   32,    0,   33,   34,
   35,    0,    0,    0,    0,   36,   37,   38,   39,   40,
   41,    0,   49,    0,    0,   42,    0,    0,    0,    0,
   45,   77,   46,   47,   22,   23,   24,   25,   26,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   32,    0,   33,   34,   35,    0,    0,    0,    0,
   36,   37,   38,   39,   40,   41,    0,    0,    0,    0,
   42,    0,    0,  156,    0,   45,   43,   46,   47,   54,
   56,   53,    0,   48,    0,   57,   51,    0,   50,    0,
    0,    0,    0,    0,   22,   23,   24,   25,   26,    0,
    0,    0,    0,    0,  205,    0,    0,   55,    0,    0,
    0,   32,    0,   33,   34,   35,    0,    0,    0,    0,
   36,   37,   38,   39,   40,   41,    0,    0,    0,    0,
   42,    0,    0,    0,   52,   45,   43,   46,   47,   54,
   56,   53,    0,   48,    0,   57,   51,    0,   50,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  209,    0,   15,   55,    0,   44,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   43,    0,    0,   54,   56,   53,    0,   48,    0,
   57,   51,    0,   50,   52,   49,   49,   49,   49,    0,
    0,    0,    0,    0,   77,   77,   77,   77,    0,  211,
    0,    0,   55,   77,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   49,   15,   77,   77,   44,
    0,   49,   49,    0,   77,    0,    0,    0,    0,   52,
   77,   77,    0,    0,    0,    0,    0,   43,    0,    0,
   54,   56,   53,    0,   48,    0,   57,   51,    0,   50,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   15,    0,    0,   44,  213,    0,    0,   55,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   22,   23,   24,   25,   26,   52,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   32,    0,   33,
   34,   35,    0,    0,    0,    0,   36,   37,   38,   39,
   40,   41,    0,    0,    0,    0,   42,   15,    0,    0,
   44,   45,    0,   46,   47,    0,    0,    0,    0,    0,
   74,    0,    0,   74,    0,    0,    0,    0,    0,    0,
   22,   23,   24,   25,   26,    0,    0,   74,   74,    0,
   74,    0,   74,    0,    0,    0,    0,   32,    0,   33,
   34,   35,    0,    0,    0,    0,   36,   37,   38,   39,
   40,   41,    0,    0,    0,    0,   42,    0,    0,    0,
    0,   45,   74,   46,   47,   22,   23,   24,   25,   26,
    0,   59,    0,    0,   59,    0,    0,    0,    0,    0,
    0,    0,   32,    0,   33,   34,   35,    0,   59,   59,
    0,   36,   37,   38,   39,   40,   41,    0,    0,    0,
    0,   42,    0,    0,    0,    0,   45,    0,   46,   47,
   43,    0,    0,   54,   56,   53,    0,   48,    0,   57,
   51,    0,   50,   59,    0,    0,    0,    0,    0,    0,
    0,   22,   23,   24,   25,   26,    0,    0,  215,    0,
    0,   55,    0,    0,    0,    0,    0,    0,   32,    0,
   33,   34,   35,    0,    0,    0,    0,   36,   37,   38,
   39,   40,   41,    0,    0,    0,    0,   42,   52,    0,
    0,    0,   45,   43,   46,   47,   54,   56,   53,    0,
   48,    0,   57,   51,    0,   50,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   15,  217,    0,   44,   55,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   43,    0,
    0,   54,   56,   53,    0,   48,    0,   57,   51,    0,
   50,   52,    0,    0,    0,   74,   74,   74,   74,    0,
    0,    0,    0,    0,   74,    0,  220,    0,    0,   55,
    0,    0,    0,    0,    0,    0,    0,    0,   74,   74,
   74,   74,    0,   15,    0,   74,   44,    0,    0,    0,
    0,   74,   74,    0,    0,    0,   52,    0,    0,    0,
    0,   43,    0,    0,   54,   56,   53,    0,   48,  229,
   57,   51,    0,   50,    0,    0,   59,   59,   59,   59,
    0,    0,    0,    0,    0,    0,    0,    0,   15,    0,
    0,   44,   55,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   59,    0,    0,    0,
    0,    0,   59,   59,   22,   23,   24,   25,   26,   52,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   32,    0,   33,   34,   35,    0,    0,    0,    0,
   36,   37,   38,   39,   40,   41,    0,    0,    0,    0,
   42,   15,    0,    0,   44,   45,    0,   46,   47,    0,
    0,    0,    0,    0,    0,    0,    0,   78,    0,    0,
   78,    0,    0,    0,    0,    0,    0,   22,   23,   24,
   25,   26,    0,    0,   78,   78,    0,   78,    0,   78,
    0,    0,    0,    0,   32,    0,   33,   34,   35,    0,
    0,    0,    0,   36,   37,   38,   39,   40,   41,    0,
    0,    0,    0,   42,    0,    0,    0,    0,   45,   78,
   46,   47,   22,   23,   24,   25,   26,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   32,
    0,   33,   34,   35,    0,    0,    0,    0,   36,   37,
   38,   39,   40,   41,    0,    0,    0,    0,   42,    0,
    0,    0,    0,   45,   43,   46,   47,   54,   56,   53,
    0,   48,  252,   57,   51,    0,   50,    0,    0,    0,
    0,    0,    0,    0,    0,   22,   23,   24,   25,   26,
    0,    0,    0,    0,    0,   55,    0,    0,    0,    0,
    0,    0,   32,    0,   33,   34,   35,    0,    0,    0,
    0,   36,   37,   38,   39,   40,   41,    0,    0,    0,
    0,   42,   52,    0,    0,    0,   45,   43,   46,   47,
   54,   56,   53,    0,   48,  254,   57,   51,    0,   50,
    0,    0,    0,    0,    0,    0,    0,    0,   61,    0,
    0,   61,    0,    0,   15,    0,    0,   44,   55,    0,
    0,    0,    0,    0,    0,   61,   61,    0,    0,    0,
    0,    0,   43,    0,    0,   54,   56,   53,    0,   48,
    0,   57,   51,    0,   50,   52,    0,    0,    0,    0,
    0,    0,   78,   78,   78,   78,    0,    0,  258,    0,
   61,   78,    0,   55,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   78,    0,   15,    0,    0,
   44,    0,   78,    0,    0,    0,    0,    0,   78,   78,
   52,    0,    0,    0,    0,   43,    0,    0,   54,   56,
   53,    0,   48,  261,   57,   51,    0,   50,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   15,    0,    0,   44,   55,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   22,   23,
   24,   25,   26,   52,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   32,    0,   33,   34,   35,
    0,    0,    0,    0,   36,   37,   38,   39,   40,   41,
    0,    0,    0,    0,   42,   15,    0,    0,   44,   45,
    0,   46,   47,    0,    0,    0,    0,    0,    0,    0,
    0,   62,    0,    0,   62,    0,    0,    0,    0,    0,
    0,   22,   23,   24,   25,   26,    0,    0,   62,   62,
    0,    0,    0,    0,    0,    0,    0,    0,   32,    0,
   33,   34,   35,   61,   61,   61,   61,   36,   37,   38,
   39,   40,   41,    0,    0,    0,    0,   42,    0,    0,
    0,    0,   45,   62,   46,   47,   22,   23,   24,   25,
   26,    0,    0,   61,    0,    0,    0,    0,    0,   61,
   61,    0,    0,   32,    0,   33,   34,   35,    0,    0,
    0,    0,   36,   37,   38,   39,   40,   41,    0,    0,
    0,    0,   42,    0,    0,    0,    0,   45,   43,   46,
   47,   54,   56,   53,    0,   48,    0,   57,   51,    0,
   50,    0,    0,    0,    0,    0,    0,    0,    0,   22,
   23,   24,   25,   26,    0,    0,    0,    0,    0,   55,
    0,    0,    0,    0,    0,    0,   32,    0,   33,   34,
   35,    0,    0,    0,    0,   36,   37,   38,   39,   40,
   41,    0,    0,    0,    0,   42,   52,    0,  263,    0,
   45,   43,   46,   47,   54,   56,   53,    0,   48,    0,
   57,   51,    0,   50,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   15,    0,
    0,   44,   55,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   43,    0,    0,   54,
   56,   53,    0,   48,    0,   57,   51,    0,   50,   52,
    0,    0,    0,    0,    0,    0,   62,   62,   62,   62,
    0,    0,    0,    0,    0,    0,    0,   55,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  128,   15,    0,  128,   44,    0,   62,    0,    0,    0,
    0,    0,   62,   62,   52,    0,    0,  128,  128,    0,
  128,    0,  128,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  136,    0,
    0,  136,    0,    0,    0,    0,   15,    0,    0,   44,
    0,    0,  128,    0,    0,  136,  136,    0,  136,    0,
  136,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   22,   23,   24,   25,   26,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   32,
  136,   33,   34,   35,    0,    0,    0,    0,   36,   37,
   38,   39,   40,   41,    0,    0,  125,    0,   42,  125,
    0,    0,    0,   45,    0,   46,   47,    0,    0,    0,
    0,    0,    0,  125,  125,    0,  125,    0,  125,    0,
    0,    0,    0,    0,    0,   96,   23,   24,   25,   26,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  103,    0,   32,  103,   33,   34,   35,    0,  125,    0,
    0,   36,   37,   38,   39,   40,   41,  103,  103,    0,
  103,   42,  103,    0,    0,    0,   45,    0,   46,   47,
   22,   23,   24,   25,   26,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  114,    0,   32,  114,   33,
   34,   35,  103,    0,    0,    0,   36,   37,   38,   39,
   40,   41,  114,  114,    0,  114,   42,  114,    0,    0,
    0,   45,    0,   46,   47,  128,  128,  128,  128,    0,
    0,    0,    0,    0,  128,    0,    0,    0,  128,  128,
  128,  128,    0,    0,    0,    0,    0,  114,  128,  128,
  128,  128,    0,  128,  128,  128,    0,   67,  128,    0,
   67,  128,  128,  136,  136,  136,  136,   66,    0,    0,
   66,    0,  136,    0,   67,   67,  136,  136,  136,  136,
    0,    0,    0,    0,   66,   66,  136,  136,  136,  136,
    0,  136,  136,  136,    0,    0,  136,    0,  134,  136,
  136,  134,    0,    0,    0,    0,    0,    0,    0,   67,
    0,    0,    0,    0,    0,  134,  134,    0,  134,   66,
  134,    0,    0,    0,    0,    0,    0,    0,    0,  308,
    0,  125,  125,  125,  125,    0,    0,    0,    0,    0,
  125,    0,    0,    0,  125,  125,  125,  125,    0,  138,
  134,  139,    0,    0,  125,  125,  125,  125,    0,  125,
  125,  125,    0,   98,  125,    0,   98,  125,  125,    0,
    0,    0,    0,    0,    0,  103,  103,  103,  103,    0,
   98,   98,    0,   98,  103,   98,    0,    0,  103,  103,
  103,  103,    0,    0,    0,    0,    0,    0,  103,  103,
  103,  103,    0,  103,  103,  103,    0,    0,  103,    0,
   93,  103,  103,   93,    0,   98,    0,    0,    0,    0,
  114,  114,  114,  114,    0,    0,    0,   93,   93,  114,
   93,    0,   93,  114,  114,  114,  114,    0,    0,    0,
    0,    0,    0,  114,  114,  114,  114,    0,  114,  114,
  114,   92,    0,  114,   92,    0,  114,  114,    0,    0,
    0,    0,   93,    0,    0,    0,    0,    0,   92,   92,
    0,   92,    0,   92,    0,    0,    0,    0,    0,    0,
    0,    0,   67,   67,   67,   67,    0,    0,    0,  137,
    0,    0,   66,   66,   66,   66,    0,    0,    0,    0,
    0,    0,    0,   92,    0,    0,  137,  137,    0,  137,
    0,  137,   67,    0,    0,    0,    0,    0,   67,   67,
    0,    0,   66,  134,  134,  134,  134,    0,   66,   66,
    0,    0,  134,    0,    0,    0,  134,  134,  134,  134,
    0,  137,    0,    0,    0,    0,  134,  134,  134,  134,
    0,  134,  134,  134,  136,    0,  134,  136,    0,  134,
  134,    0,    0,  133,    0,    0,    0,  134,  135,  136,
  137,  136,  136,    0,  136,    0,  136,  140,  141,  142,
  143,    0,  144,  145,    0,    0,    0,  146,   98,   98,
   98,   98,    0,    0,    0,    0,    0,   98,    0,    0,
    0,   98,   98,   98,   98,    0,  136,    0,    0,    0,
    0,   98,   98,   98,   98,    0,   98,   98,   98,    0,
    0,   98,    0,   80,   98,   98,   80,    0,    0,    0,
    0,    0,    0,    0,    0,   93,   93,   93,   93,    0,
   80,   80,    0,   80,   93,   80,    0,    0,   93,   93,
   93,   93,    0,    0,    0,    0,    0,    0,   93,   93,
   93,   93,    0,   93,   93,   93,   68,    0,   93,   68,
    0,   93,   93,    0,    0,   80,   92,   92,   92,   92,
    0,    0,    0,   68,   68,   92,   68,    0,   68,   92,
   92,   92,   92,    0,    0,    0,    0,    0,    0,   92,
   92,   92,   92,    0,   92,   92,   92,   65,    0,   92,
   65,    0,   92,   92,  137,  137,  137,  137,   68,    0,
    0,    0,    0,  137,   65,   65,    0,  137,  137,  137,
  137,    0,    0,    0,    0,    0,    0,  137,  137,  137,
  137,    0,  137,  137,  137,   69,    0,  137,   69,    0,
  137,  137,    0,    0,    0,    0,    0,    0,    0,   65,
    0,    0,   69,   69,    0,   69,    0,   69,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  136,
  136,  136,  136,    0,    0,    0,    0,    0,  136,    0,
    0,    0,  136,  136,  136,  136,    0,   69,    0,    0,
    0,    0,  136,  136,  136,  136,   70,  136,  136,   70,
    0,    0,  136,    0,    0,  136,  136,    0,    0,    0,
    0,    0,    0,   70,   70,    0,   70,    0,   70,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   80,   80,
   80,   80,    0,    0,    0,    0,    0,   80,   70,    0,
    0,   80,   80,   80,   80,  138,    0,  139,    0,    0,
    0,   80,   80,   80,   80,    0,   80,   80,   80,   71,
    0,    0,   71,    0,   80,   80,    0,    0,    0,    0,
    0,   68,   68,   68,   68,    0,   71,   71,    0,   71,
   68,   71,    0,    0,   68,   68,   68,   68,    0,    0,
    0,    0,    0,    0,   68,   68,   68,   68,    0,   68,
   68,   68,  117,    0,    0,  117,    0,   68,   68,    0,
    0,   71,   65,   65,   65,   65,    0,    0,    0,  117,
  117,    0,  117,    0,  117,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   91,    0,   65,   91,    0,    0,    0,    0,   65,   65,
   69,   69,   69,   69,  117,    0,    0,   91,   91,   69,
   91,    0,   91,   69,   69,   69,   69,    0,    0,    0,
    0,    0,    0,   69,   69,   69,   69,    0,   69,  127,
   69,    0,  127,    0,    0,    0,   69,   69,    0,    0,
    0,    0,   91,    0,    0,    0,  127,  127,    0,  127,
    0,  127,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   70,   70,   70,   70,    0,    0,    0,    0,    0,
   70,    0,    0,    0,   70,   70,    0,   70,    0,    0,
    0,  127,    0,    0,   70,   70,   70,   70,    0,   70,
   72,   70,    0,   72,    0,    0,    0,   70,   70,    0,
   75,    0,    0,   75,    0,    0,    0,   72,   72,  133,
   72,    0,   72,  134,  135,  136,  137,   75,   75,    0,
   75,    0,   75,  140,  141,  142,  143,    0,  144,  145,
    0,    0,    0,  146,   71,   71,   71,   71,    0,    0,
    0,    0,   72,   71,    0,    0,    0,   71,   71,    0,
    0,    0,   75,    0,    0,    0,    0,   71,   71,   71,
   71,    0,   71,    0,   71,    0,    0,    0,    0,    0,
   71,   71,    0,    0,    0,    0,    0,  117,  117,  117,
  117,   64,    0,    0,   64,    0,  117,    0,    0,    0,
  117,  117,   63,    0,    0,   63,    0,    0,   64,   64,
  117,  117,  117,  117,    0,    0,    0,  117,    0,   63,
   63,    0,    0,  117,  117,   91,   91,   91,   91,    0,
    0,    0,    0,    0,   91,    0,    0,    0,   91,   91,
    0,   60,    0,   64,   60,    0,    0,    0,   91,   91,
   91,   91,    0,    0,   63,   91,    0,    0,   60,   60,
    0,   91,   91,    0,  127,  127,  127,  127,    0,    0,
    0,    0,    0,  127,    0,    0,    0,  127,  127,    0,
    0,    0,    0,    0,    0,    0,    0,  127,  127,  127,
  127,    0,    0,   60,  127,   84,    0,    0,   84,    0,
  127,  127,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   84,   84,    0,   84,    0,   84,    0,    0,
    0,    0,    0,    0,    0,   72,   72,   72,   72,    0,
    0,    0,    0,    0,   72,   75,   75,   75,   75,   72,
    0,    0,    0,    0,   75,    0,    0,   84,   72,   72,
   72,   72,    0,    0,    0,   72,    0,    0,   75,   75,
   75,   72,   72,   85,    0,   75,   85,    0,    0,    0,
    0,   75,   75,    0,    0,    0,    0,    0,    0,    0,
   85,   85,    0,   85,    0,   85,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   86,    0,    0,   86,    0,    0,    0,
    0,    0,    0,    0,    0,   85,   64,   64,   64,   64,
   86,   86,    0,   86,    0,   86,    0,   63,   63,   63,
   63,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   64,    0,    0,    0,
    0,    0,   64,   64,    0,   86,   82,   63,    0,   82,
    0,    0,    0,   63,   63,    0,   60,   60,   60,   60,
    0,    0,    0,   82,   82,    0,   82,    0,   82,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   83,   60,    0,   83,    0,
    0,    0,   60,   60,    0,    0,    0,    0,   82,    0,
    0,    0,   83,   83,    0,   83,    0,   83,    0,    0,
   84,   84,   84,   84,    0,    0,    0,    0,    0,   84,
    0,    0,    0,   84,   84,   84,   84,  266,    0,    0,
  138,    0,  139,   84,   84,   84,   84,   83,   84,   84,
   84,    0,    0,   84,   81,    0,    0,   81,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   81,   81,    0,   81,    0,   81,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   85,   85,
   85,   85,    0,    0,    0,    0,    0,   85,    0,    0,
    0,   85,   85,   85,   85,  234,   81,    0,  235,    0,
    0,   85,   85,   85,   85,    0,   85,   85,   85,    0,
    0,   85,    0,    0,    0,  138,    0,  139,   86,   86,
   86,   86,    0,    0,    0,    0,    0,   86,    0,    0,
    0,   86,   86,   86,   86,    0,    0,    0,    0,    0,
    0,   86,   86,   86,   86,    0,   86,   86,   86,    0,
    0,   86,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   82,   82,   82,   82,    0,    0,    0,    0,    0,
   82,    0,    0,    0,   82,   82,   82,   82,    0,    0,
    0,    0,    0,    0,   82,   82,   82,   82,    0,   82,
   82,   82,    0,    0,   82,    0,    0,    0,    0,    0,
   83,   83,   83,   83,    0,    0,    0,    0,    0,   83,
    0,    0,    0,   83,   83,   83,   83,    0,    0,    0,
    0,    0,    0,   83,   83,   83,   83,    0,   83,   83,
   83,    0,    0,   83,  133,    0,    0,    0,  134,  135,
  136,  137,    0,    0,    0,    0,    0,    0,  140,  141,
  142,  143,    0,  144,  145,    0,    0,    0,  146,   81,
   81,   81,   81,    0,   98,  100,    0,    0,   81,  109,
    0,    0,   81,   81,   81,   81,    0,    0,    0,    0,
    0,    0,   81,   81,   81,   81,    0,   81,   81,    0,
    0,    0,   81,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  159,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  133,
    0,    0,    0,  134,  135,  136,  137,    0,    0,    0,
    0,    0,    0,  140,  141,  142,  143,    0,  144,  145,
    0,    0,    0,  146,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  199,
  200,  201,  202,  204,  206,  207,  208,  210,  212,  214,
  216,  218,  219,  221,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  199,    0,    0,    0,    0,    0,  199,    0,  199,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  264,    0,  265,    0,    0,    0,  267,    0,  268,    0,
  269,    0,  270,    0,  271,    0,    0,  272,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  283,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  301,
};
short yycheck[] = {                                       5,
   59,  168,  123,   91,   44,  125,   12,   40,   91,   40,
   16,   40,   18,   40,   12,   36,   40,  257,  162,   91,
  164,   27,   28,   29,   30,   41,   36,  281,  282,  123,
   40,   37,   44,  170,   23,  123,   42,   59,   41,   44,
  123,  295,   40,   59,   63,  299,   40,   36,   44,   44,
   48,  123,   41,   93,   52,  281,   59,   41,   91,   36,
   44,  278,   40,   40,   53,   54,   55,   56,   57,  295,
    0,  288,   44,  299,   58,   59,   82,   61,   84,   63,
   86,   93,   88,   81,  257,   83,   79,   85,   93,   87,
  123,   89,  123,  230,  123,   93,  123,   93,   93,  123,
  295,   94,  123,   33,  299,   94,   36,   37,   38,   93,
   40,  248,   42,   43,  107,   45,  253,   41,  255,  286,
  126,   93,  289,   44,   41,   40,    0,   44,   41,   59,
  128,  129,  130,  131,   64,   59,  257,   44,   59,   41,
  284,  285,  262,  263,  264,  265,   59,  291,   41,   41,
   44,   44,  150,  151,  152,  153,  154,   59,   44,   33,
  327,   91,   36,   37,   38,   59,   40,   59,   42,   43,
  258,   45,  316,   59,  172,  272,   44,   44,    0,   44,
  178,  179,   40,  181,  177,   59,  281,  282,   40,  187,
   64,   59,   59,  123,   59,  125,  126,   59,  257,  294,
  295,  302,  303,  296,  299,   43,   44,   45,   46,   47,
   40,   33,   50,   51,   36,   37,   38,   91,   40,   40,
   42,   43,  296,   45,  222,   41,  224,   36,  302,  303,
  236,   44,  238,  123,  240,  241,  257,   59,  244,  232,
  261,  247,   64,  125,  262,  263,  264,  265,  246,  123,
   41,  125,  126,   44,   41,   91,  275,   44,  256,   41,
  279,  280,  281,  282,  262,   41,  270,  271,   44,   91,
  289,  290,  291,  292,   41,  294,  295,   44,   59,   41,
  299,  274,  266,  267,  268,  269,  292,   91,  281,   41,
  288,  275,   44,  125,  123,  279,  280,  281,  282,  299,
   40,  123,   40,  125,  126,  289,  290,  291,  292,   40,
  294,  295,  296,   41,  125,  299,  314,  323,  302,  303,
  125,   41,  328,  125,   59,  125,  256,  257,  258,  259,
  260,  261,  262,  263,  264,  265,  266,  267,  268,  269,
  125,   41,  125,  273,  274,   41,  276,  277,  278,  266,
  267,  268,  269,  283,  284,  285,  286,  287,  288,  266,
  267,  268,  269,  293,   41,   41,  296,   59,  298,   41,
  300,  301,   59,   59,   41,   72,  314,   12,   -1,   -1,
  246,   -1,  256,  257,  258,  259,  260,  261,  262,  263,
  264,  265,  266,  267,  268,  269,   -1,   -1,   -1,  273,
  274,   -1,  276,  277,  278,   41,   -1,   -1,   44,  283,
  284,  285,  286,  287,  288,   41,   -1,   -1,   44,  293,
   -1,   -1,   58,   59,  298,   61,  300,  301,   -1,   -1,
   -1,   -1,   58,   59,  256,  257,  258,  259,  260,  261,
  262,  263,  264,  265,  266,  267,  268,  269,    0,   -1,
   -1,  273,  274,   -1,  276,  277,  278,   93,   -1,   -1,
   -1,  283,  284,  285,  286,  287,  288,   93,   -1,   -1,
   -1,  293,   -1,   -1,   -1,   -1,  298,   -1,  300,  301,
   -1,   33,   -1,   -1,   36,   37,   38,   23,   40,   -1,
   42,   43,   -1,   45,   -1,   31,   -1,   -1,   -1,   -1,
   36,   37,   -1,   39,   -1,   -1,   -1,   59,  279,  280,
  281,  282,   64,   -1,   -1,   -1,   -1,   53,   54,   55,
   56,   57,   -1,  294,  295,   -1,   33,   -1,  299,   36,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   91,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,   58,   59,   -1,   61,   -1,   63,   64,  290,  291,
  292,   -1,  294,  295,   -1,  101,   -1,  299,   -1,   -1,
   -1,  123,   -1,  279,  126,  281,  282,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   91,   -1,   93,   33,  294,  295,
   36,   37,   38,  299,   40,   41,   42,   43,   44,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,
  281,  282,   58,   59,   -1,   61,  123,   63,   64,  126,
  291,  292,   -1,  294,  295,   -1,   -1,   -1,  299,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   93,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   36,   37,   38,   -1,   40,
  296,   42,   43,   -1,   45,   -1,  302,  303,   -1,   -1,
  296,  279,  280,  281,  282,   -1,  302,  303,   59,   -1,
  126,   -1,   -1,   64,  292,   -1,  294,  295,   -1,   -1,
   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,  261,
   91,   -1,   -1,   -1,  266,  267,  268,  269,   -1,   -1,
   -1,  273,  274,   -1,  276,  277,  278,   -1,   -1,   -1,
   -1,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,  293,  123,   -1,   -1,  126,  298,   -1,  300,  301,
  257,  258,  259,  260,  261,   -1,   -1,   -1,   -1,  266,
  267,  268,  269,   -1,   -1,   -1,   -1,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,  299,  300,  301,  302,  303,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   -1,  274,  275,
  276,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,  299,  300,  301,  302,  303,   33,   -1,
   -1,   36,   37,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   -1,   -1,   -1,   -1,  256,  257,  258,  259,  260,
  261,   -1,   -1,   -1,   59,  266,  267,  268,  269,   64,
   -1,   -1,  273,  274,   -1,  276,  277,  278,   -1,   -1,
   -1,   -1,  283,  284,  285,  286,  287,  288,   -1,   -1,
   -1,   -1,  293,   -1,   -1,   -1,   91,  298,   33,  300,
  301,   36,   37,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   59,   -1,   -1,   -1,  123,   64,
   -1,  126,   -1,   -1,   -1,   -1,   58,   59,   -1,   61,
   -1,   63,   -1,   33,   -1,   -1,   36,   37,   38,   -1,
   40,   41,   42,   43,   -1,   45,   91,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,  291,
  292,   93,  294,  295,   64,   -1,   -1,  299,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   91,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   36,   37,   38,   -1,   40,   -1,   42,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  256,  257,  258,  259,  260,  261,   91,   -1,   93,
   -1,  266,  267,  268,  269,   -1,   -1,   -1,  273,  274,
   -1,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,
  285,  286,  287,  288,   -1,   -1,   -1,   -1,  293,  123,
   -1,   -1,  126,  298,   -1,  300,  301,   -1,   -1,   -1,
   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,   58,
   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,  274,
   -1,  276,  277,  278,  266,  267,  268,  269,  283,  284,
  285,  286,  287,  288,   -1,   -1,   -1,   -1,  293,   -1,
   -1,   -1,   -1,  298,   93,  300,  301,  257,  258,  259,
  260,  261,   -1,   -1,  296,   -1,   -1,   -1,   -1,   -1,
  302,  303,   -1,   -1,  274,   -1,  276,  277,  278,   -1,
   -1,   -1,   -1,  283,  284,  285,  286,  287,  288,   -1,
   -1,   -1,   -1,  293,   -1,   -1,   -1,   -1,  298,   33,
  300,  301,   36,   37,   38,   -1,   40,   -1,   42,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  274,   -1,  276,  277,  278,   -1,   -1,   -1,   -1,  283,
  284,  285,  286,  287,  288,   -1,   -1,   91,   -1,  293,
   -1,   -1,   -1,   -1,  298,   33,  300,  301,   36,   37,
   38,   -1,   40,   41,   42,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   -1,   -1,   36,   37,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   91,   -1,   -1,   -1,  266,  267,  268,
  269,   -1,   -1,   -1,   -1,   -1,  275,   -1,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  289,  290,  291,  292,   -1,  123,   -1,  296,  126,   -1,
   -1,   -1,   -1,  302,  303,   -1,   -1,   -1,   91,   -1,
   33,   -1,   -1,   36,   37,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   61,   -1,
  123,   64,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  256,  257,  258,  259,  260,  261,   91,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  274,   -1,  276,  277,  278,   -1,   -1,   -1,   -1,  283,
  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,  293,
  123,   -1,   -1,  126,  298,   -1,  300,  301,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   41,
   -1,   -1,   44,   -1,   -1,   -1,   -1,   58,   59,  257,
  258,  259,  260,  261,   -1,   -1,   58,   59,   -1,   61,
   -1,   63,   -1,   -1,   -1,   -1,  274,   -1,  276,  277,
  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,
  288,   -1,   93,   -1,   -1,  293,   -1,   -1,   -1,   -1,
  298,   93,  300,  301,  257,  258,  259,  260,  261,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  274,   -1,  276,  277,  278,   -1,   -1,   -1,   -1,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,
  293,   -1,   -1,  296,   -1,  298,   33,  300,  301,   36,
   37,   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,
   -1,   -1,   -1,   -1,   61,   -1,   -1,   64,   -1,   -1,
   -1,  274,   -1,  276,  277,  278,   -1,   -1,   -1,   -1,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,
  293,   -1,   -1,   -1,   91,  298,   33,  300,  301,   36,
   37,   38,   -1,   40,   -1,   42,   43,   -1,   45,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   61,   -1,  123,   64,   -1,  126,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   36,   37,   38,   -1,   40,   -1,
   42,   43,   -1,   45,   91,  266,  267,  268,  269,   -1,
   -1,   -1,   -1,   -1,  266,  267,  268,  269,   -1,   61,
   -1,   -1,   64,  275,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  296,  123,  289,  290,  126,
   -1,  302,  303,   -1,  296,   -1,   -1,   -1,   -1,   91,
  302,  303,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,
   36,   37,   38,   -1,   40,   -1,   42,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,   -1,  126,   61,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,  261,   91,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  274,   -1,  276,
  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,
  287,  288,   -1,   -1,   -1,   -1,  293,  123,   -1,   -1,
  126,  298,   -1,  300,  301,   -1,   -1,   -1,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
  257,  258,  259,  260,  261,   -1,   -1,   58,   59,   -1,
   61,   -1,   63,   -1,   -1,   -1,   -1,  274,   -1,  276,
  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,
  287,  288,   -1,   -1,   -1,   -1,  293,   -1,   -1,   -1,
   -1,  298,   93,  300,  301,  257,  258,  259,  260,  261,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  274,   -1,  276,  277,  278,   -1,   58,   59,
   -1,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,  293,   -1,   -1,   -1,   -1,  298,   -1,  300,  301,
   33,   -1,   -1,   36,   37,   38,   -1,   40,   -1,   42,
   43,   -1,   45,   93,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   -1,   -1,   61,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,  274,   -1,
  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,  285,
  286,  287,  288,   -1,   -1,   -1,   -1,  293,   91,   -1,
   -1,   -1,  298,   33,  300,  301,   36,   37,   38,   -1,
   40,   -1,   42,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   61,   -1,  126,   64,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,
   -1,   36,   37,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   91,   -1,   -1,   -1,  266,  267,  268,  269,   -1,
   -1,   -1,   -1,   -1,  275,   -1,   61,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,
  291,  292,   -1,  123,   -1,  296,  126,   -1,   -1,   -1,
   -1,  302,  303,   -1,   -1,   -1,   91,   -1,   -1,   -1,
   -1,   33,   -1,   -1,   36,   37,   38,   -1,   40,   41,
   42,   43,   -1,   45,   -1,   -1,  266,  267,  268,  269,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   -1,  126,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  296,   -1,   -1,   -1,
   -1,   -1,  302,  303,  257,  258,  259,  260,  261,   91,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  274,   -1,  276,  277,  278,   -1,   -1,   -1,   -1,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,
  293,  123,   -1,   -1,  126,  298,   -1,  300,  301,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,
   44,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,   -1,   -1,   58,   59,   -1,   61,   -1,   63,
   -1,   -1,   -1,   -1,  274,   -1,  276,  277,  278,   -1,
   -1,   -1,   -1,  283,  284,  285,  286,  287,  288,   -1,
   -1,   -1,   -1,  293,   -1,   -1,   -1,   -1,  298,   93,
  300,  301,  257,  258,  259,  260,  261,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  274,
   -1,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,
  285,  286,  287,  288,   -1,   -1,   -1,   -1,  293,   -1,
   -1,   -1,   -1,  298,   33,  300,  301,   36,   37,   38,
   -1,   40,   41,   42,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
   -1,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,  274,   -1,  276,  277,  278,   -1,   -1,   -1,
   -1,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,  293,   91,   -1,   -1,   -1,  298,   33,  300,  301,
   36,   37,   38,   -1,   40,   41,   42,   43,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,  123,   -1,   -1,  126,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   36,   37,   38,   -1,   40,
   -1,   42,   43,   -1,   45,   91,   -1,   -1,   -1,   -1,
   -1,   -1,  266,  267,  268,  269,   -1,   -1,   59,   -1,
   93,  275,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  289,   -1,  123,   -1,   -1,
  126,   -1,  296,   -1,   -1,   -1,   -1,   -1,  302,  303,
   91,   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,   37,
   38,   -1,   40,   41,   42,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  123,   -1,   -1,  126,   64,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,
  259,  260,  261,   91,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  274,   -1,  276,  277,  278,
   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,  288,
   -1,   -1,   -1,   -1,  293,  123,   -1,   -1,  126,  298,
   -1,  300,  301,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,  257,  258,  259,  260,  261,   -1,   -1,   58,   59,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  274,   -1,
  276,  277,  278,  266,  267,  268,  269,  283,  284,  285,
  286,  287,  288,   -1,   -1,   -1,   -1,  293,   -1,   -1,
   -1,   -1,  298,   93,  300,  301,  257,  258,  259,  260,
  261,   -1,   -1,  296,   -1,   -1,   -1,   -1,   -1,  302,
  303,   -1,   -1,  274,   -1,  276,  277,  278,   -1,   -1,
   -1,   -1,  283,  284,  285,  286,  287,  288,   -1,   -1,
   -1,   -1,  293,   -1,   -1,   -1,   -1,  298,   33,  300,
  301,   36,   37,   38,   -1,   40,   -1,   42,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,
  258,  259,  260,  261,   -1,   -1,   -1,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   -1,  274,   -1,  276,  277,
  278,   -1,   -1,   -1,   -1,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,  293,   91,   -1,   93,   -1,
  298,   33,  300,  301,   36,   37,   38,   -1,   40,   -1,
   42,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
   -1,  126,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   33,   -1,   -1,   36,
   37,   38,   -1,   40,   -1,   42,   43,   -1,   45,   91,
   -1,   -1,   -1,   -1,   -1,   -1,  266,  267,  268,  269,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,  123,   -1,   44,  126,   -1,  296,   -1,   -1,   -1,
   -1,   -1,  302,  303,   91,   -1,   -1,   58,   59,   -1,
   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,
   -1,   -1,   93,   -1,   -1,   58,   59,   -1,   61,   -1,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  257,  258,  259,  260,  261,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  274,
   93,  276,  277,  278,   -1,   -1,   -1,   -1,  283,  284,
  285,  286,  287,  288,   -1,   -1,   41,   -1,  293,   44,
   -1,   -1,   -1,  298,   -1,  300,  301,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,
   -1,   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,   -1,  274,   44,  276,  277,  278,   -1,   93,   -1,
   -1,  283,  284,  285,  286,  287,  288,   58,   59,   -1,
   61,  293,   63,   -1,   -1,   -1,  298,   -1,  300,  301,
  257,  258,  259,  260,  261,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,   -1,  274,   44,  276,
  277,  278,   93,   -1,   -1,   -1,  283,  284,  285,  286,
  287,  288,   58,   59,   -1,   61,  293,   63,   -1,   -1,
   -1,  298,   -1,  300,  301,  266,  267,  268,  269,   -1,
   -1,   -1,   -1,   -1,  275,   -1,   -1,   -1,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,   93,  289,  290,
  291,  292,   -1,  294,  295,  296,   -1,   41,  299,   -1,
   44,  302,  303,  266,  267,  268,  269,   41,   -1,   -1,
   44,   -1,  275,   -1,   58,   59,  279,  280,  281,  282,
   -1,   -1,   -1,   -1,   58,   59,  289,  290,  291,  292,
   -1,  294,  295,  296,   -1,   -1,  299,   -1,   41,  302,
  303,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   61,   93,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   41,
   -1,  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,
  275,   -1,   -1,   -1,  279,  280,  281,  282,   -1,   61,
   93,   63,   -1,   -1,  289,  290,  291,  292,   -1,  294,
  295,  296,   -1,   41,  299,   -1,   44,  302,  303,   -1,
   -1,   -1,   -1,   -1,   -1,  266,  267,  268,  269,   -1,
   58,   59,   -1,   61,  275,   63,   -1,   -1,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,
  291,  292,   -1,  294,  295,  296,   -1,   -1,  299,   -1,
   41,  302,  303,   44,   -1,   93,   -1,   -1,   -1,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   58,   59,  275,
   61,   -1,   63,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,  295,
  296,   41,   -1,  299,   44,   -1,  302,  303,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   58,   59,
   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  266,  267,  268,  269,   -1,   -1,   -1,   41,
   -1,   -1,  266,  267,  268,  269,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   58,   59,   -1,   61,
   -1,   63,  296,   -1,   -1,   -1,   -1,   -1,  302,  303,
   -1,   -1,  296,  266,  267,  268,  269,   -1,  302,  303,
   -1,   -1,  275,   -1,   -1,   -1,  279,  280,  281,  282,
   -1,   93,   -1,   -1,   -1,   -1,  289,  290,  291,  292,
   -1,  294,  295,  296,   41,   -1,  299,   44,   -1,  302,
  303,   -1,   -1,  275,   -1,   -1,   -1,  279,  280,  281,
  282,   58,   59,   -1,   61,   -1,   63,  289,  290,  291,
  292,   -1,  294,  295,   -1,   -1,   -1,  299,  266,  267,
  268,  269,   -1,   -1,   -1,   -1,   -1,  275,   -1,   -1,
   -1,  279,  280,  281,  282,   -1,   93,   -1,   -1,   -1,
   -1,  289,  290,  291,  292,   -1,  294,  295,  296,   -1,
   -1,  299,   -1,   41,  302,  303,   44,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  266,  267,  268,  269,   -1,
   58,   59,   -1,   61,  275,   63,   -1,   -1,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,
  291,  292,   -1,  294,  295,  296,   41,   -1,  299,   44,
   -1,  302,  303,   -1,   -1,   93,  266,  267,  268,  269,
   -1,   -1,   -1,   58,   59,  275,   61,   -1,   63,  279,
  280,  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,
  290,  291,  292,   -1,  294,  295,  296,   41,   -1,  299,
   44,   -1,  302,  303,  266,  267,  268,  269,   93,   -1,
   -1,   -1,   -1,  275,   58,   59,   -1,  279,  280,  281,
  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,  291,
  292,   -1,  294,  295,  296,   41,   -1,  299,   44,   -1,
  302,  303,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  266,
  267,  268,  269,   -1,   -1,   -1,   -1,   -1,  275,   -1,
   -1,   -1,  279,  280,  281,  282,   -1,   93,   -1,   -1,
   -1,   -1,  289,  290,  291,  292,   41,  294,  295,   44,
   -1,   -1,  299,   -1,   -1,  302,  303,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  266,  267,
  268,  269,   -1,   -1,   -1,   -1,   -1,  275,   93,   -1,
   -1,  279,  280,  281,  282,   61,   -1,   63,   -1,   -1,
   -1,  289,  290,  291,  292,   -1,  294,  295,  296,   41,
   -1,   -1,   44,   -1,  302,  303,   -1,   -1,   -1,   -1,
   -1,  266,  267,  268,  269,   -1,   58,   59,   -1,   61,
  275,   63,   -1,   -1,  279,  280,  281,  282,   -1,   -1,
   -1,   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,
  295,  296,   41,   -1,   -1,   44,   -1,  302,  303,   -1,
   -1,   93,  266,  267,  268,  269,   -1,   -1,   -1,   58,
   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,   -1,  296,   44,   -1,   -1,   -1,   -1,  302,  303,
  266,  267,  268,  269,   93,   -1,   -1,   58,   59,  275,
   61,   -1,   63,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,   41,
  296,   -1,   44,   -1,   -1,   -1,  302,  303,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   58,   59,   -1,   61,
   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,
  275,   -1,   -1,   -1,  279,  280,   -1,  282,   -1,   -1,
   -1,   93,   -1,   -1,  289,  290,  291,  292,   -1,  294,
   41,  296,   -1,   44,   -1,   -1,   -1,  302,  303,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   58,   59,  275,
   61,   -1,   63,  279,  280,  281,  282,   58,   59,   -1,
   61,   -1,   63,  289,  290,  291,  292,   -1,  294,  295,
   -1,   -1,   -1,  299,  266,  267,  268,  269,   -1,   -1,
   -1,   -1,   93,  275,   -1,   -1,   -1,  279,  280,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,  289,  290,  291,
  292,   -1,  294,   -1,  296,   -1,   -1,   -1,   -1,   -1,
  302,  303,   -1,   -1,   -1,   -1,   -1,  266,  267,  268,
  269,   41,   -1,   -1,   44,   -1,  275,   -1,   -1,   -1,
  279,  280,   41,   -1,   -1,   44,   -1,   -1,   58,   59,
  289,  290,  291,  292,   -1,   -1,   -1,  296,   -1,   58,
   59,   -1,   -1,  302,  303,  266,  267,  268,  269,   -1,
   -1,   -1,   -1,   -1,  275,   -1,   -1,   -1,  279,  280,
   -1,   41,   -1,   93,   44,   -1,   -1,   -1,  289,  290,
  291,  292,   -1,   -1,   93,  296,   -1,   -1,   58,   59,
   -1,  302,  303,   -1,  266,  267,  268,  269,   -1,   -1,
   -1,   -1,   -1,  275,   -1,   -1,   -1,  279,  280,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,  291,
  292,   -1,   -1,   93,  296,   41,   -1,   -1,   44,   -1,
  302,  303,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  266,  267,  268,  269,   -1,
   -1,   -1,   -1,   -1,  275,  266,  267,  268,  269,  280,
   -1,   -1,   -1,   -1,  275,   -1,   -1,   93,  289,  290,
  291,  292,   -1,   -1,   -1,  296,   -1,   -1,  289,  290,
  291,  302,  303,   41,   -1,  296,   44,   -1,   -1,   -1,
   -1,  302,  303,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,  266,  267,  268,  269,
   58,   59,   -1,   61,   -1,   63,   -1,  266,  267,  268,
  269,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  296,   -1,   -1,   -1,
   -1,   -1,  302,  303,   -1,   93,   41,  296,   -1,   44,
   -1,   -1,   -1,  302,  303,   -1,  266,  267,  268,  269,
   -1,   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,  296,   -1,   44,   -1,
   -1,   -1,  302,  303,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   58,   59,   -1,   61,   -1,   63,   -1,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,  275,
   -1,   -1,   -1,  279,  280,  281,  282,   58,   -1,   -1,
   61,   -1,   63,  289,  290,  291,  292,   93,  294,  295,
  296,   -1,   -1,  299,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   61,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  266,  267,
  268,  269,   -1,   -1,   -1,   -1,   -1,  275,   -1,   -1,
   -1,  279,  280,  281,  282,   41,   93,   -1,   44,   -1,
   -1,  289,  290,  291,  292,   -1,  294,  295,  296,   -1,
   -1,  299,   -1,   -1,   -1,   61,   -1,   63,  266,  267,
  268,  269,   -1,   -1,   -1,   -1,   -1,  275,   -1,   -1,
   -1,  279,  280,  281,  282,   -1,   -1,   -1,   -1,   -1,
   -1,  289,  290,  291,  292,   -1,  294,  295,  296,   -1,
   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,
  275,   -1,   -1,   -1,  279,  280,  281,  282,   -1,   -1,
   -1,   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,
  295,  296,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,
  266,  267,  268,  269,   -1,   -1,   -1,   -1,   -1,  275,
   -1,   -1,   -1,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,  295,
  296,   -1,   -1,  299,  275,   -1,   -1,   -1,  279,  280,
  281,  282,   -1,   -1,   -1,   -1,   -1,   -1,  289,  290,
  291,  292,   -1,  294,  295,   -1,   -1,   -1,  299,  266,
  267,  268,  269,   -1,   37,   38,   -1,   -1,  275,   42,
   -1,   -1,  279,  280,  281,  282,   -1,   -1,   -1,   -1,
   -1,   -1,  289,  290,  291,  292,   -1,  294,  295,   -1,
   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   80,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  275,
   -1,   -1,   -1,  279,  280,  281,  282,   -1,   -1,   -1,
   -1,   -1,   -1,  289,  290,  291,  292,   -1,  294,  295,
   -1,   -1,   -1,  299,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  132,
  133,  134,  135,  136,  137,  138,  139,  140,  141,  142,
  143,  144,  145,  146,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  183,   -1,   -1,   -1,   -1,   -1,  189,   -1,  191,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  203,   -1,  205,   -1,   -1,   -1,  209,   -1,  211,   -1,
  213,   -1,  215,   -1,  217,   -1,   -1,  220,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  235,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  266,
};
#define YYFINAL 1
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
#define YYMAXTOKEN 303
#if YYDEBUG
char *yyname[] = {
"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'!'",0,0,"'$'","'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'",0,0,0,0,0,0,0,
0,0,0,0,0,"':'","';'",0,"'='",0,"'?'","'@'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,"'['",0,"']'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,"'{'",0,"'}'","'~'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"WORD","METHOD","THING",
"PMFUNC","PRIVATEREF","LABEL","FORMAT","SUB","PACKAGE","WHILE","UNTIL","IF",
"UNLESS","ELSE","ELSIF","CONTINUE","FOR","LOOPEX","DOTDOT","FUNC0","FUNC1",
"FUNC","RELOP","EQOP","MULOP","ADDOP","DOLSHARP","DO","LOCAL","DELETE",
"HASHBRACK","LSTOP","OROR","ANDAND","BITOROP","BITANDOP","UNIOP","SHIFTOP",
"MATCHOP","ARROW","UMINUS","REFGEN","POWOP","PREINC","PREDEC","POSTINC",
"POSTDEC",
};
char *yyrule[] = {
"$accept : prog",
"$$1 :",
"prog : $$1 lineseq",
"block : '{' remember lineseq '}'",
"remember :",
"lineseq :",
"lineseq : lineseq decl",
"lineseq : lineseq line",
"line : label cond",
"line : loop",
"line : label ';'",
"line : label sideff ';'",
"sideff : error",
"sideff : expr",
"sideff : expr IF expr",
"sideff : expr UNLESS expr",
"sideff : expr WHILE expr",
"sideff : expr UNTIL expr",
"else :",
"else : ELSE block",
"else : ELSIF '(' expr ')' block else",
"cond : IF '(' expr ')' block else",
"cond : UNLESS '(' expr ')' block else",
"cond : IF block block else",
"cond : UNLESS block block else",
"cont :",
"cont : CONTINUE block",
"loop : label WHILE '(' texpr ')' block cont",
"loop : label UNTIL '(' expr ')' block cont",
"loop : label WHILE block block cont",
"loop : label UNTIL block block cont",
"loop : label FOR scalar '(' expr crp block cont",
"loop : label FOR '(' expr crp block cont",
"loop : label FOR '(' nexpr ';' texpr ';' nexpr ')' block",
"loop : label block cont",
"nexpr :",
"nexpr : sideff",
"texpr :",
"texpr : expr",
"label :",
"label : LABEL",
"decl : format",
"decl : subrout",
"decl : package",
"format : FORMAT WORD block",
"format : FORMAT block",
"subrout : SUB WORD block",
"package : PACKAGE WORD ';'",
"package : PACKAGE ';'",
"expr : expr ',' sexpr",
"expr : sexpr",
"listop : LSTOP indirob listexpr",
"listop : FUNC '(' indirob listexpr ')'",
"listop : indirob ARROW LSTOP listexpr",
"listop : indirob ARROW FUNC '(' listexpr ')'",
"listop : term ARROW METHOD '(' listexpr ')'",
"listop : METHOD indirob listexpr",
"listop : LSTOP listexpr",
"listop : FUNC '(' listexpr ')'",
"sexpr : sexpr '=' sexpr",
"sexpr : sexpr POWOP '=' sexpr",
"sexpr : sexpr MULOP '=' sexpr",
"sexpr : sexpr ADDOP '=' sexpr",
"sexpr : sexpr SHIFTOP '=' sexpr",
"sexpr : sexpr BITANDOP '=' sexpr",
"sexpr : sexpr BITOROP '=' sexpr",
"sexpr : sexpr ANDAND '=' sexpr",
"sexpr : sexpr OROR '=' sexpr",
"sexpr : sexpr POWOP sexpr",
"sexpr : sexpr MULOP sexpr",
"sexpr : sexpr ADDOP sexpr",
"sexpr : sexpr SHIFTOP sexpr",
"sexpr : sexpr RELOP sexpr",
"sexpr : sexpr EQOP sexpr",
"sexpr : sexpr BITANDOP sexpr",
"sexpr : sexpr BITOROP sexpr",
"sexpr : sexpr DOTDOT sexpr",
"sexpr : sexpr ANDAND sexpr",
"sexpr : sexpr OROR sexpr",
"sexpr : sexpr '?' sexpr ':' sexpr",
"sexpr : sexpr MATCHOP sexpr",
"sexpr : term",
"term : '-' term",
"term : '+' term",
"term : '!' term",
"term : '~' term",
"term : REFGEN term",
"term : term POSTINC",
"term : term POSTDEC",
"term : PREINC term",
"term : PREDEC term",
"term : LOCAL sexpr",
"term : '(' expr crp",
"term : '(' ')'",
"term : '[' expr crb",
"term : '[' ']'",
"term : HASHBRACK expr crhb",
"term : HASHBRACK ';' '}'",
"term : scalar",
"term : star",
"term : scalar '[' expr ']'",
"term : term ARROW '[' expr ']'",
"term : hsh",
"term : ary",
"term : arylen",
"term : scalar '{' expr ';' '}'",
"term : term ARROW '{' expr ';' '}'",
"term : '(' expr crp '[' expr ']'",
"term : '(' ')' '[' expr ']'",
"term : ary '[' expr ']'",
"term : ary '{' expr ';' '}'",
"term : DELETE scalar '{' expr ';' '}'",
"term : DELETE '(' scalar '{' expr ';' '}' ')'",
"term : THING",
"term : amper",
"term : amper '(' ')'",
"term : amper '(' expr crp",
"term : DO sexpr",
"term : DO block",
"term : DO WORD '(' ')'",
"term : DO WORD '(' expr crp",
"term : DO scalar '(' ')'",
"term : DO scalar '(' expr crp",
"term : LOOPEX",
"term : LOOPEX WORD",
"term : UNIOP",
"term : UNIOP block",
"term : UNIOP sexpr",
"term : FUNC0",
"term : FUNC0 '(' ')'",
"term : FUNC1 '(' ')'",
"term : FUNC1 '(' expr ')'",
"term : PMFUNC '(' sexpr ')'",
"term : PMFUNC '(' sexpr ',' sexpr ')'",
"term : WORD",
"term : listop",
"listexpr :",
"listexpr : expr",
"amper : '&' indirob",
"scalar : '$' indirob",
"ary : '@' indirob",
"hsh : '%' indirob",
"arylen : DOLSHARP indirob",
"star : '*' indirob",
"indirob : WORD",
"indirob : scalar",
"indirob : block",
"indirob : PRIVATEREF",
"crp : ',' ')'",
"crp : ')'",
"crb : ',' ']'",
"crb : ']'",
"crhb : ',' ';' '}'",
"crhb : ';' '}'",
};
#endif
#define yyclearin (yychar=(-1))
#define yyerrok (yyerrflag=0)
#ifdef YYSTACKSIZE
#ifndef YYMAXDEPTH
#define YYMAXDEPTH YYSTACKSIZE
#endif
#else
#ifdef YYMAXDEPTH
#define YYSTACKSIZE YYMAXDEPTH
#else
#define YYSTACKSIZE 500
#define YYMAXDEPTH 500
#endif
#endif
int yydebug;
int yynerrs;
int yyerrflag;
int yychar;
short *yyssp;
YYSTYPE *yyvsp;
YYSTYPE yyval;
YYSTYPE yylval;
short yyss[YYSTACKSIZE];
YYSTYPE yyvs[YYSTACKSIZE];
#define yystacksize YYSTACKSIZE
#line 573 "perly.y"
 /* PROGRAM */
#line 1409 "y.tab.c"
#define YYABORT goto yyabort
#define YYACCEPT goto yyaccept
#define YYERROR goto yyerrlab
int
yyparse()
{
    register int yym, yyn, yystate;
#if YYDEBUG
    register char *yys;
    extern char *getenv();

    if (yys = getenv("YYDEBUG"))
    {
        yyn = *yys;
        if (yyn >= '0' && yyn <= '9')
            yydebug = yyn - '0';
    }
#endif

    yynerrs = 0;
    yyerrflag = 0;
    yychar = (-1);

    yyssp = yyss;
    yyvsp = yyvs;
    *yyssp = yystate = 0;

yyloop:
    if (yyn = yydefred[yystate]) goto yyreduce;
    if (yychar < 0)
    {
        if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            printf("yydebug: state %d, reading %d (%s)\n", yystate,
                    yychar, yys);
        }
#endif
    }
    if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
#if YYDEBUG
        if (yydebug)
            printf("yydebug: state %d, shifting to state %d\n",
                    yystate, yytable[yyn]);
#endif
        if (yyssp >= yyss + yystacksize - 1)
        {
            goto yyoverflow;
        }
        *++yyssp = yystate = yytable[yyn];
        *++yyvsp = yylval;
        yychar = (-1);
        if (yyerrflag > 0)  --yyerrflag;
        goto yyloop;
    }
    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
    {
        yyn = yytable[yyn];
        goto yyreduce;
    }
    if (yyerrflag) goto yyinrecovery;
#ifdef lint
    goto yynewerror;
#endif
yynewerror:
    yyerror("syntax error");
#ifdef lint
    goto yyerrlab;
#endif
yyerrlab:
    ++yynerrs;
yyinrecovery:
    if (yyerrflag < 3)
    {
        yyerrflag = 3;
        for (;;)
        {
            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&
                    yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
            {
#if YYDEBUG
                if (yydebug)
                    printf("yydebug: state %d, error recovery shifting\
 to state %d\n", *yyssp, yytable[yyn]);
#endif
                if (yyssp >= yyss + yystacksize - 1)
                {
                    goto yyoverflow;
                }
                *++yyssp = yystate = yytable[yyn];
                *++yyvsp = yylval;
                goto yyloop;
            }
            else
            {
#if YYDEBUG
                if (yydebug)
                    printf("yydebug: error recovery discarding state %d\n",
                            *yyssp);
#endif
                if (yyssp <= yyss) goto yyabort;
                --yyssp;
                --yyvsp;
            }
        }
    }
    else
    {
        if (yychar == 0) goto yyabort;
#if YYDEBUG
        if (yydebug)
        {
            yys = 0;
            if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
            if (!yys) yys = "illegal-symbol";
            printf("yydebug: state %d, error recovery discards token %d (%s)\n",
                    yystate, yychar, yys);
        }
#endif
        yychar = (-1);
        goto yyloop;
    }
yyreduce:
#if YYDEBUG
    if (yydebug)
        printf("yydebug: state %d, reducing by rule %d (%s)\n",
                yystate, yyn, yyrule[yyn]);
#endif
    yym = yylen[yyn];
    yyval = yyvsp[1-yym];
    switch (yyn)
    {
case 1:
#line 100 "perly.y"
{
#if defined(YYDEBUG) && defined(DEBUGGING)
		    yydebug = (debug & 1);
#endif
		    expect = XBLOCK;
		}
break;
case 2:
#line 107 "perly.y"
{   if (in_eval) {
				eval_root = newUNOP(OP_LEAVEEVAL, 0, yyvsp[0].opval);
				eval_start = linklist(eval_root);
				eval_root->op_next = 0;
				peep(eval_start);
			    }
			    else
				main_root = block_head(yyvsp[0].opval, &main_start);
			}
break;
case 3:
#line 119 "perly.y"
{ yyval.opval = scalarseq(yyvsp[-1].opval);
			  if (copline > (line_t)yyvsp[-3].ival)
			      copline = yyvsp[-3].ival;
			  leave_scope(yyvsp[-2].ival);
			  pad_leavemy(comppadnamefill);
			  expect = XBLOCK; }
break;
case 4:
#line 128 "perly.y"
{ yyval.ival = savestack_ix; SAVEINT(comppadnamefill); }
break;
case 5:
#line 132 "perly.y"
{ yyval.opval = Nullop; }
break;
case 6:
#line 134 "perly.y"
{ yyval.opval = yyvsp[-1].opval; }
break;
case 7:
#line 136 "perly.y"
{ yyval.opval = append_list(OP_LINESEQ, yyvsp[-1].opval, yyvsp[0].opval); pad_reset(); }
break;
case 8:
#line 140 "perly.y"
{ yyval.opval = newSTATEOP(0, yyvsp[-1].pval, yyvsp[0].opval); }
break;
case 10:
#line 143 "perly.y"
{ if (yyvsp[-1].pval != Nullch) {
			      yyval.opval = newSTATEOP(0, yyvsp[-1].pval, newOP(OP_NULL, 0));
			    }
			    else {
			      yyval.opval = Nullop;
			      copline = NOLINE;
			    }
			    expect = XBLOCK; }
break;
case 11:
#line 152 "perly.y"
{ yyval.opval = newSTATEOP(0, yyvsp[-2].pval, yyvsp[-1].opval);
			  expect = XBLOCK; }
break;
case 12:
#line 157 "perly.y"
{ yyval.opval = Nullop; }
break;
case 13:
#line 159 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 14:
#line 161 "perly.y"
{ yyval.opval = newLOGOP(OP_AND, 0, yyvsp[0].opval, yyvsp[-2].opval); }
break;
case 15:
#line 163 "perly.y"
{ yyval.opval = newLOGOP(OP_OR, 0, yyvsp[0].opval, yyvsp[-2].opval); }
break;
case 16:
#line 165 "perly.y"
{ yyval.opval = newLOOPOP(0, 1, scalar(yyvsp[0].opval), yyvsp[-2].opval); }
break;
case 17:
#line 167 "perly.y"
{ yyval.opval = newLOOPOP(0, 1, invert(scalar(yyvsp[0].opval)), yyvsp[-2].opval);}
break;
case 18:
#line 171 "perly.y"
{ yyval.opval = Nullop; }
break;
case 19:
#line 173 "perly.y"
{ yyval.opval = scope(yyvsp[0].opval); }
break;
case 20:
#line 175 "perly.y"
{ copline = yyvsp[-5].ival;
			    yyval.opval = newCONDOP(0, yyvsp[-3].opval, scope(yyvsp[-1].opval), yyvsp[0].opval); }
break;
case 21:
#line 180 "perly.y"
{ copline = yyvsp[-5].ival;
			    yyval.opval = newCONDOP(0, yyvsp[-3].opval, scope(yyvsp[-1].opval), yyvsp[0].opval); }
break;
case 22:
#line 183 "perly.y"
{ copline = yyvsp[-5].ival;
			    yyval.opval = newCONDOP(0,
				invert(scalar(yyvsp[-3].opval)), scope(yyvsp[-1].opval), yyvsp[0].opval); }
break;
case 23:
#line 187 "perly.y"
{ copline = yyvsp[-3].ival;
			    yyval.opval = newCONDOP(0, scope(yyvsp[-2].opval), scope(yyvsp[-1].opval), yyvsp[0].opval); }
break;
case 24:
#line 190 "perly.y"
{ copline = yyvsp[-3].ival;
			    yyval.opval = newCONDOP(0, invert(scalar(scope(yyvsp[-2].opval))),
						scope(yyvsp[-1].opval), yyvsp[0].opval); }
break;
case 25:
#line 196 "perly.y"
{ yyval.opval = Nullop; }
break;
case 26:
#line 198 "perly.y"
{ yyval.opval = scope(yyvsp[0].opval); }
break;
case 27:
#line 202 "perly.y"
{ copline = yyvsp[-5].ival;
			    yyval.opval = newSTATEOP(0, yyvsp[-6].pval,
				    newWHILEOP(0, 1, Nullop, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval) ); }
break;
case 28:
#line 206 "perly.y"
{ copline = yyvsp[-5].ival;
			    yyval.opval = newSTATEOP(0, yyvsp[-6].pval,
				    newWHILEOP(0, 1, Nullop,
					invert(scalar(yyvsp[-3].opval)), yyvsp[-1].opval, yyvsp[0].opval) ); }
break;
case 29:
#line 211 "perly.y"
{ copline = yyvsp[-3].ival;
			    yyval.opval = newSTATEOP(0, yyvsp[-4].pval,
				    newWHILEOP(0, 1, Nullop,
					scope(yyvsp[-2].opval), yyvsp[-1].opval, yyvsp[0].opval) ); }
break;
case 30:
#line 216 "perly.y"
{ copline = yyvsp[-3].ival;
			    yyval.opval = newSTATEOP(0, yyvsp[-4].pval,
				    newWHILEOP(0, 1, Nullop,
					invert(scalar(scope(yyvsp[-2].opval))), yyvsp[-1].opval, yyvsp[0].opval)); }
break;
case 31:
#line 221 "perly.y"
{ yyval.opval = newFOROP(0, yyvsp[-7].pval, yyvsp[-6].ival, ref(yyvsp[-5].opval, OP_ENTERLOOP),
				yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval); }
break;
case 32:
#line 224 "perly.y"
{ yyval.opval = newFOROP(0, yyvsp[-6].pval, yyvsp[-5].ival, Nullop, yyvsp[-3].opval, yyvsp[-1].opval, yyvsp[0].opval); }
break;
case 33:
#line 227 "perly.y"
{  copline = yyvsp[-8].ival;
			    yyval.opval = append_elem(OP_LINESEQ,
				    newSTATEOP(0, yyvsp[-9].pval, scalar(yyvsp[-6].opval)),
				    newSTATEOP(0, yyvsp[-9].pval,
					newWHILEOP(0, 1, Nullop,
					    scalar(yyvsp[-4].opval), yyvsp[0].opval, scalar(yyvsp[-2].opval)) )); }
break;
case 34:
#line 234 "perly.y"
{ yyval.opval = newSTATEOP(0,
				yyvsp[-2].pval, newWHILEOP(0, 1, Nullop, Nullop, yyvsp[-1].opval, yyvsp[0].opval)); }
break;
case 35:
#line 239 "perly.y"
{ yyval.opval = Nullop; }
break;
case 37:
#line 244 "perly.y"
{ (void)scan_num("1"); yyval.opval = yylval.opval; }
break;
case 39:
#line 249 "perly.y"
{ yyval.pval = Nullch; }
break;
case 41:
#line 254 "perly.y"
{ yyval.ival = 0; }
break;
case 42:
#line 256 "perly.y"
{ yyval.ival = 0; }
break;
case 43:
#line 258 "perly.y"
{ yyval.ival = 0; }
break;
case 44:
#line 262 "perly.y"
{ newFORM(yyvsp[-2].ival, yyvsp[-1].opval, yyvsp[0].opval); }
break;
case 45:
#line 264 "perly.y"
{ newFORM(yyvsp[-1].ival, Nullop, yyvsp[0].opval); }
break;
case 46:
#line 268 "perly.y"
{ newSUB(yyvsp[-2].ival, yyvsp[-1].opval, yyvsp[0].opval); }
break;
case 47:
#line 272 "perly.y"
{ package(yyvsp[-1].opval); }
break;
case 48:
#line 274 "perly.y"
{ package(Nullop); }
break;
case 49:
#line 278 "perly.y"
{ yyval.opval = append_elem(OP_LIST, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 51:
#line 283 "perly.y"
{ yyval.opval = convert(yyvsp[-2].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-1].opval), yyvsp[0].opval) ); }
break;
case 52:
#line 286 "perly.y"
{ yyval.opval = convert(yyvsp[-4].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-2].opval), yyvsp[-1].opval) ); }
break;
case 53:
#line 289 "perly.y"
{ yyval.opval = convert(yyvsp[-1].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-3].opval), yyvsp[0].opval) ); }
break;
case 54:
#line 292 "perly.y"
{ yyval.opval = convert(yyvsp[-3].ival, OPf_STACKED,
				prepend_elem(OP_LIST, newGVREF(yyvsp[-5].opval), yyvsp[-1].opval) ); }
break;
case 55:
#line 295 "perly.y"
{ yyval.opval = convert(OP_ENTERSUBR, OPf_STACKED|OPf_SPECIAL,
				prepend_elem(OP_LIST, newMETHOD(yyvsp[-5].opval,yyvsp[-3].opval), yyvsp[-1].opval)); }
break;
case 56:
#line 298 "perly.y"
{ yyval.opval = convert(OP_ENTERSUBR, OPf_STACKED|OPf_SPECIAL,
				prepend_elem(OP_LIST, newMETHOD(yyvsp[-1].opval,yyvsp[-2].opval), yyvsp[0].opval)); }
break;
case 57:
#line 301 "perly.y"
{ yyval.opval = convert(yyvsp[-1].ival, 0, yyvsp[0].opval); }
break;
case 58:
#line 303 "perly.y"
{ yyval.opval = convert(yyvsp[-3].ival, 0, yyvsp[-1].opval); }
break;
case 59:
#line 307 "perly.y"
{ yyval.opval = newASSIGNOP(OPf_STACKED, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 60:
#line 309 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval)); }
break;
case 61:
#line 312 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval)); }
break;
case 62:
#line 315 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval));}
break;
case 63:
#line 318 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval)); }
break;
case 64:
#line 321 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval)); }
break;
case 65:
#line 324 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-2].ival, OPf_STACKED,
				ref(scalar(yyvsp[-3].opval), yyvsp[-2].ival), scalar(yyvsp[0].opval)); }
break;
case 66:
#line 327 "perly.y"
{ yyval.opval = newLOGOP(OP_ANDASSIGN, 0,
				ref(scalar(yyvsp[-3].opval), OP_ANDASSIGN),
				newUNOP(OP_SASSIGN, 0, scalar(yyvsp[0].opval))); }
break;
case 67:
#line 331 "perly.y"
{ yyval.opval = newLOGOP(OP_ORASSIGN, 0,
				ref(scalar(yyvsp[-3].opval), OP_ORASSIGN),
				newUNOP(OP_SASSIGN, 0, scalar(yyvsp[0].opval))); }
break;
case 68:
#line 337 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 69:
#line 339 "perly.y"
{   if (yyvsp[-1].ival != OP_REPEAT)
				scalar(yyvsp[-2].opval);
			    yyval.opval = newBINOP(yyvsp[-1].ival, 0, yyvsp[-2].opval, scalar(yyvsp[0].opval)); }
break;
case 70:
#line 343 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 71:
#line 345 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 72:
#line 347 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 73:
#line 349 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 74:
#line 351 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 75:
#line 353 "perly.y"
{ yyval.opval = newBINOP(yyvsp[-1].ival, 0, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval)); }
break;
case 76:
#line 355 "perly.y"
{ yyval.opval = newRANGE(yyvsp[-1].ival, scalar(yyvsp[-2].opval), scalar(yyvsp[0].opval));}
break;
case 77:
#line 357 "perly.y"
{ yyval.opval = newLOGOP(OP_AND, 0, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 78:
#line 359 "perly.y"
{ yyval.opval = newLOGOP(OP_OR, 0, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 79:
#line 361 "perly.y"
{ yyval.opval = newCONDOP(0, yyvsp[-4].opval, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 80:
#line 363 "perly.y"
{ yyval.opval = bind_match(yyvsp[-1].ival, yyvsp[-2].opval, yyvsp[0].opval); }
break;
case 81:
#line 365 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 82:
#line 369 "perly.y"
{ yyval.opval = newUNOP(OP_NEGATE, 0, scalar(yyvsp[0].opval)); }
break;
case 83:
#line 371 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 84:
#line 373 "perly.y"
{ yyval.opval = newUNOP(OP_NOT, 0, scalar(yyvsp[0].opval)); }
break;
case 85:
#line 375 "perly.y"
{ yyval.opval = newUNOP(OP_COMPLEMENT, 0, scalar(yyvsp[0].opval));}
break;
case 86:
#line 377 "perly.y"
{ yyval.opval = newUNOP(OP_REFGEN, 0, ref(yyvsp[0].opval, OP_REFGEN)); }
break;
case 87:
#line 379 "perly.y"
{ yyval.opval = newUNOP(OP_POSTINC, 0,
					ref(scalar(yyvsp[-1].opval), OP_POSTINC)); }
break;
case 88:
#line 382 "perly.y"
{ yyval.opval = newUNOP(OP_POSTDEC, 0,
					ref(scalar(yyvsp[-1].opval), OP_POSTDEC)); }
break;
case 89:
#line 385 "perly.y"
{ yyval.opval = newUNOP(OP_PREINC, 0,
					ref(scalar(yyvsp[0].opval), OP_PREINC)); }
break;
case 90:
#line 388 "perly.y"
{ yyval.opval = newUNOP(OP_PREDEC, 0,
					ref(scalar(yyvsp[0].opval), OP_PREDEC)); }
break;
case 91:
#line 391 "perly.y"
{ yyval.opval = localize(yyvsp[0].opval,yyvsp[-1].ival); }
break;
case 92:
#line 393 "perly.y"
{ yyval.opval = sawparens(yyvsp[-1].opval); }
break;
case 93:
#line 395 "perly.y"
{ yyval.opval = newNULLLIST(); }
break;
case 94:
#line 397 "perly.y"
{ yyval.opval = newANONLIST(yyvsp[-1].opval); }
break;
case 95:
#line 399 "perly.y"
{ yyval.opval = newANONLIST(Nullop); }
break;
case 96:
#line 401 "perly.y"
{ yyval.opval = newANONHASH(yyvsp[-1].opval); }
break;
case 97:
#line 403 "perly.y"
{ yyval.opval = newANONHASH(Nullop); }
break;
case 98:
#line 405 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 99:
#line 407 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 100:
#line 409 "perly.y"
{ yyval.opval = newBINOP(OP_AELEM, 0, oopsAV(yyvsp[-3].opval), scalar(yyvsp[-1].opval)); }
break;
case 101:
#line 411 "perly.y"
{ yyval.opval = newBINOP(OP_AELEM, 0,
					scalar(ref(newAVREF(yyvsp[-4].opval),OP_RV2AV)),
					scalar(yyvsp[-1].opval));}
break;
case 102:
#line 415 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 103:
#line 417 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 104:
#line 419 "perly.y"
{ yyval.opval = newUNOP(OP_AV2ARYLEN, 0, ref(yyvsp[0].opval, OP_AV2ARYLEN));}
break;
case 105:
#line 421 "perly.y"
{ yyval.opval = newBINOP(OP_HELEM, 0, oopsHV(yyvsp[-4].opval), jmaybe(yyvsp[-2].opval));
			    expect = XOPERATOR; }
break;
case 106:
#line 424 "perly.y"
{ yyval.opval = newBINOP(OP_HELEM, 0,
					scalar(ref(newHVREF(yyvsp[-5].opval),OP_RV2HV)),
					jmaybe(yyvsp[-2].opval));
			    expect = XOPERATOR; }
break;
case 107:
#line 429 "perly.y"
{ yyval.opval = newSLICEOP(0, yyvsp[-1].opval, yyvsp[-4].opval); }
break;
case 108:
#line 431 "perly.y"
{ yyval.opval = newSLICEOP(0, yyvsp[-1].opval, Nullop); }
break;
case 109:
#line 433 "perly.y"
{ yyval.opval = prepend_elem(OP_ASLICE,
				newOP(OP_PUSHMARK, 0),
				list(
				    newLISTOP(OP_ASLICE, 0,
					list(yyvsp[-1].opval),
					ref(yyvsp[-3].opval, OP_ASLICE)))); }
break;
case 110:
#line 440 "perly.y"
{ yyval.opval = prepend_elem(OP_HSLICE,
				newOP(OP_PUSHMARK, 0),
				list(
				    newLISTOP(OP_HSLICE, 0,
					list(yyvsp[-2].opval),
					ref(oopsHV(yyvsp[-4].opval), OP_HSLICE))));
			    expect = XOPERATOR; }
break;
case 111:
#line 448 "perly.y"
{ yyval.opval = newBINOP(OP_DELETE, 0, oopsHV(yyvsp[-4].opval), jmaybe(yyvsp[-2].opval));
			    expect = XOPERATOR; }
break;
case 112:
#line 451 "perly.y"
{ yyval.opval = newBINOP(OP_DELETE, 0, oopsHV(yyvsp[-5].opval), jmaybe(yyvsp[-3].opval));
			    expect = XOPERATOR; }
break;
case 113:
#line 454 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 114:
#line 456 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, 0,
				scalar(yyvsp[0].opval)); }
break;
case 115:
#line 459 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_STACKED, scalar(yyvsp[-2].opval)); }
break;
case 116:
#line 461 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_STACKED,
			    list(prepend_elem(OP_LIST, scalar(yyvsp[-3].opval), yyvsp[-1].opval))); }
break;
case 117:
#line 464 "perly.y"
{ yyval.opval = newUNOP(OP_DOFILE, 0, scalar(yyvsp[0].opval));
			  allgvs = TRUE;}
break;
case 118:
#line 467 "perly.y"
{ yyval.opval = newUNOP(OP_NULL, OPf_SPECIAL, scope(yyvsp[0].opval)); }
break;
case 119:
#line 469 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_SPECIAL|OPf_STACKED,
			    list(prepend_elem(OP_LIST,
				scalar(newCVREF(scalar(yyvsp[-2].opval))), newNULLLIST()))); }
break;
case 120:
#line 473 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_SPECIAL|OPf_STACKED,
			    list(prepend_elem(OP_LIST,
				scalar(newCVREF(scalar(yyvsp[-3].opval))),
				yyvsp[-1].opval))); }
break;
case 121:
#line 478 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_SPECIAL|OPf_STACKED,
			    list(prepend_elem(OP_LIST,
				scalar(newCVREF(scalar(yyvsp[-2].opval))), newNULLLIST())));}
break;
case 122:
#line 482 "perly.y"
{ yyval.opval = newUNOP(OP_ENTERSUBR, OPf_SPECIAL|OPf_STACKED,
			    list(prepend_elem(OP_LIST,
				scalar(newCVREF(scalar(yyvsp[-3].opval))),
				yyvsp[-1].opval))); }
break;
case 123:
#line 487 "perly.y"
{ yyval.opval = newOP(yyvsp[0].ival, OPf_SPECIAL); }
break;
case 124:
#line 489 "perly.y"
{ yyval.opval = newPVOP(yyvsp[-1].ival, 0,
				savestr(SvPVnx(((SVOP*)yyvsp[0].opval)->op_sv)));
			    op_free(yyvsp[0].opval); }
break;
case 125:
#line 493 "perly.y"
{ yyval.opval = newOP(yyvsp[0].ival, 0); }
break;
case 126:
#line 495 "perly.y"
{ yyval.opval = newUNOP(yyvsp[-1].ival, 0, yyvsp[0].opval); }
break;
case 127:
#line 497 "perly.y"
{ yyval.opval = newUNOP(yyvsp[-1].ival, 0, yyvsp[0].opval); }
break;
case 128:
#line 499 "perly.y"
{ yyval.opval = newOP(yyvsp[0].ival, 0); }
break;
case 129:
#line 501 "perly.y"
{ yyval.opval = newOP(yyvsp[-2].ival, 0); }
break;
case 130:
#line 503 "perly.y"
{ yyval.opval = newOP(yyvsp[-2].ival, OPf_SPECIAL); }
break;
case 131:
#line 505 "perly.y"
{ yyval.opval = newUNOP(yyvsp[-3].ival, 0, yyvsp[-1].opval); }
break;
case 132:
#line 507 "perly.y"
{ yyval.opval = pmruntime(yyvsp[-3].opval, yyvsp[-1].opval, Nullop); }
break;
case 133:
#line 509 "perly.y"
{ yyval.opval = pmruntime(yyvsp[-5].opval, yyvsp[-3].opval, yyvsp[-1].opval); }
break;
case 136:
#line 515 "perly.y"
{ yyval.opval = newNULLLIST(); }
break;
case 137:
#line 517 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 138:
#line 521 "perly.y"
{ yyval.opval = newCVREF(yyvsp[0].opval); }
break;
case 139:
#line 525 "perly.y"
{ yyval.opval = newSVREF(yyvsp[0].opval); }
break;
case 140:
#line 529 "perly.y"
{ yyval.opval = newAVREF(yyvsp[0].opval); }
break;
case 141:
#line 533 "perly.y"
{ yyval.opval = newHVREF(yyvsp[0].opval); }
break;
case 142:
#line 537 "perly.y"
{ yyval.opval = newAVREF(yyvsp[0].opval); }
break;
case 143:
#line 541 "perly.y"
{ yyval.opval = newGVREF(yyvsp[0].opval); }
break;
case 144:
#line 545 "perly.y"
{ yyval.opval = scalar(yyvsp[0].opval); }
break;
case 145:
#line 547 "perly.y"
{ yyval.opval = scalar(yyvsp[0].opval); }
break;
case 146:
#line 549 "perly.y"
{ yyval.opval = scalar(scope(yyvsp[0].opval)); }
break;
case 147:
#line 552 "perly.y"
{ yyval.opval = yyvsp[0].opval; }
break;
case 148:
#line 556 "perly.y"
{ yyval.ival = 1; }
break;
case 149:
#line 558 "perly.y"
{ yyval.ival = 0; }
break;
case 150:
#line 562 "perly.y"
{ yyval.ival = 1; }
break;
case 151:
#line 564 "perly.y"
{ yyval.ival = 0; }
break;
case 152:
#line 568 "perly.y"
{ yyval.ival = 1; }
break;
case 153:
#line 570 "perly.y"
{ yyval.ival = 0; }
break;
#line 2240 "y.tab.c"
    }
    yyssp -= yym;
    yystate = *yyssp;
    yyvsp -= yym;
    yym = yylhs[yyn];
    if (yystate == 0 && yym == 0)
    {
#if YYDEBUG
        if (yydebug)
            printf("yydebug: after reduction, shifting from state 0 to\
 state %d\n", YYFINAL);
#endif
        yystate = YYFINAL;
        *++yyssp = YYFINAL;
        *++yyvsp = yyval;
        if (yychar < 0)
        {
            if ((yychar = yylex()) < 0) yychar = 0;
#if YYDEBUG
            if (yydebug)
            {
                yys = 0;
                if (yychar <= YYMAXTOKEN) yys = yyname[yychar];
                if (!yys) yys = "illegal-symbol";
                printf("yydebug: state %d, reading %d (%s)\n",
                        YYFINAL, yychar, yys);
            }
#endif
        }
        if (yychar == 0) goto yyaccept;
        goto yyloop;
    }
    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
            yyn <= YYTABLESIZE && yycheck[yyn] == yystate)
        yystate = yytable[yyn];
    else
        yystate = yydgoto[yym];
#if YYDEBUG
    if (yydebug)
        printf("yydebug: after reduction, shifting from state %d \
to state %d\n", *yyssp, yystate);
#endif
    if (yyssp >= yyss + yystacksize - 1)
    {
        goto yyoverflow;
    }
    *++yyssp = yystate;
    *++yyvsp = yyval;
    goto yyloop;
yyoverflow:
    yyerror("yacc stack overflow");
yyabort:
    return (1);
yyaccept:
    return (0);
}
