Article 13355 of comp.lang.perl:
Newsgroups: comp.lang.perl
Path: netlabs!news.cerf.net!usc!cs.utexas.edu!uunet!fmrco!fmrco!asherman
From: asherman@fmrco.com (Aaron Sherman)
Subject: Re: perl 5a2 cannot "die" (plus current list o' bugs)
In-Reply-To: wjm@feenix.metronet.com's message of Fri, 20 Aug 1993 21:32:10 GMT
Message-ID: <ASHERMAN.93Aug23094250@uboat.fmrco.com>
Sender: news@fmrco.uucp
X-Quote: "...accepting is much harder than giving." -Mike Smith
Reply-To: asherman@fmrco.COM
Organization: I-Kinetics, 19 Bishop-Allen Dr., Cambridge, MA
References: <ASHERMAN.93Aug20102959@uboat.fmrco.com> <CC2uHM.6Hq@feenix.metronet.com>
Date: Mon, 23 Aug 1993 14:42:50 GMT
Lines: 47


>>>>> wjm@feenix.metronet.com (Bill Middleton) said:

wjm> asherman@fmrco.COM writes:

>An interesting pair of bugs can be seen in the following output:

wjm> I dont think so.  Could be in the compilation or something.  Did it
wjm> pass all tests?  Each of the following work fine here on this HP.

I tried compiling with Sun's native CC and GCC. Both worked fine, but
caused this problem. I'll try it with Larry's original version when I
get a chance.

wjm> perl5 -e 'die "hello $. \n";
wjm> hello  

Ah. But, note that the $. STILL isn't working. So only ONE of those
bugs did not show.

This is my current list of bugs (not complete, but what I've had time
to note). Hope it helps:

"perl -e die" will cause a seg-fault

$. is not updated

Memory leak for anonymous arrays:
	while(1) { @a = (1, 2, 3, [4, 5], 6); @a = (); }
	Will keep allocating and not freeing memory.

"perl -e 'sub foo {print 1} foo'" should either complain or call foo,
	but does neither. Or, did Larry not impliment the &-less
	function calling that he was talking about?

"perl -le 'sub foo {1} $a = \&foo; print &{$a}; print &{$a} + 1'" should
	not fail to parse.


			-AJS

--
Aaron Sherman			I-Kinetics, Inc.
Systems Engineer		  "Open Systems Stepstones"
Voice: (617)661-8181		19 Bishop Allen Dr.
Fax:   (617)661-8625		Cambridge, MA 02139
Pager: (508)545-0584		asherman@i-kinetics.com


