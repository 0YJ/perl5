=head1 NAME

POSIX - Perl interface to IEEE Std 1003.1

=head1 DESCRIPTION

The POSIX module permits you to access all (or nearly all) the standard
POSIX 1003.1 identifiers.  Many of these identifiers have been given Perl-ish
interfaces.  Things which are C<#defines> in C, like EINTR or O_NDELAY, are
automatically exported into your namespace.  All functions are only exported
if you ask for them explicitly.  Most likely people will prefer to use the
fully-qualified function names.

This document gives a condensed list of the features available in the POSIX
module.  Consult your operating system's manpages for general information on
most features.  Consult L<perlfunc> for functions which are noted as being
identical to Perl's builtin functions.

The first section describes POSIX functions from the 1003.1 specification.
The second section describes some classes for signal objects, TTY objects,
and other miscellaneous objects.  The remaining sections list various
constants and macros in an organization which roughly follows IEEE Std
1003.1b-1993.

=head1 EXAMPLES

    printf "EINTR is %d\n", EINTR;

    $sess_id = POSIX::setsid();

    $fd = POSIX::open($path, O_CREAT|O_EXCL|O_WRONLY, 0644);
	# note: that's a filedescriptor, *NOT* a filehandle

=head1 NOTE

The POSIX module is probably the most complex Perl module supplied with
the standard distribution.  It incorporates autoloading, namespace games,
and dynamic loading of code that's in Perl, C, or both.  It's a great
source of wisdom.

=head1 CAVEATS 

A few functions are not implemented because they are C specific.  If you
attempt to call these, they will print a message telling you that they
aren't implemented, and suggest using the Perl equivalent should one
exist.  For example, trying to access the setjmp() call will elicit the
message "setjmp() is C-specific: use eval {} instead".

Furthermore, some evil vendors will claim 1003.1 compliance, but in fact
are not so: they will not pass the PCTS (POSIX Compliance Test Suites).
For example, one vendor may not define EDEADLK, or the semantics of the
errno values set by open(2) might not be quite right.  Perl does not
attempt to verify POSIX compliance.  That means you can currently
successfully say "use POSIX",  and then later in your program you find
that your vendor has been lax and there's no usable ICANON macro after
all.  This could be construed to be a bug.

=head1 FUNCTIONS

=over 8

=item _exit

This is identical to the C function C<_exit()>.

=item abort

This is identical to the C function C<abort()>.

=item abs

This is identical to Perl's builtin C<abs()> function.

=item access

Determines the accessibility of a file.

	if( POSIX::access( "/", &POSIX::R_OK ) ){
		print "have read permission\n";
	}

Returns C<undef> on failure.

=item acos

This is identical to the C function C<acos()>.

=item alarm

This is identical to Perl's builtin C<alarm()> function.

=item asctime

This is identical to the C function C<asctime()>.

=item asin

This is identical to the C function C<asin()>.

=item assert


=item atan

This is identical to the C function C<atan()>.

=item atan2

This is identical to Perl's builtin C<atan2()> function.

=item atexit

atexit() is C-specific: use END {} instead.

=item atof

atof() is C-specific.

=item atoi

atoi() is C-specific.

=item atol

atol() is C-specific.

=item bsearch

bsearch() not supplied.

=item calloc

calloc() is C-specific.

=item ceil

This is identical to the C function C<ceil()>.

=item chdir

This is identical to Perl's builtin C<chdir()> function.

=item chmod

This is identical to Perl's builtin C<chmod()> function.

=item chown

This is identical to Perl's builtin C<chown()> function.

=item clearerr

Use method C<FileHandle::clearerr()> instead.

=item clock

This is identical to the C function C<clock()>.

=item close


Returns C<undef> on failure.

=item closedir

This is identical to Perl's builtin C<closedir()> function.

=item cos

This is identical to Perl's builtin C<cos()> function.

=item cosh

This is identical to the C function C<cosh()>.

=item creat


=item ctermid

Generates the path name for controlling terminal.

	$path = POSIX::ctermid();

=item ctime

This is identical to the C function C<ctime()>.

=item cuserid

Get the character login name of the user.

	$name = POSIX::cuserid();

=item difftime

This is identical to the C function C<difftime()>.

=item div

div() is C-specific.

=item dup


Returns C<undef> on failure.

=item dup2


Returns C<undef> on failure.

=item errno

Returns the value of errno.

	$errno = POSIX::errno();

=item execl

execl() is C-specific.

=item execle

execle() is C-specific.

=item execlp

execlp() is C-specific.

=item execv

execv() is C-specific.

=item execve

execve() is C-specific.

=item execvp

execvp() is C-specific.

=item exit

This is identical to Perl's builtin C<exit()> function.

=item exp

This is identical to Perl's builtin C<exp()> function.

=item fabs

This is identical to Perl's builtin C<abs()> function.

=item fclose

Use method C<FileHandle::close()> instead.

=item fcntl

This is identical to Perl's builtin C<fcntl()> function.

=item fdopen

Use method C<FileHandle::new_from_fd()> instead.

=item feof

Use method C<FileHandle::eof()> instead.

=item ferror

Use method C<FileHandle::error()> instead.

=item fflush

Use method C<FileHandle::flush()> instead.

=item fgetc

Use method C<FileHandle::getc()> instead.

=item fgetpos

Use method C<FileHandle::getpos()> instead.

=item fgets

Use method C<FileHandle::gets()> instead.

=item fileno

Use method C<FileHandle::fileno()> instead.

=item floor

This is identical to the C function C<floor()>.

=item fmod

This is identical to the C function C<fmod()>.

=item fopen

Use method C<FileHandle::open()> instead.

=item fork

This is identical to Perl's builtin C<fork()> function.

=item fpathconf


Returns C<undef> on failure.

=item fprintf

fprintf() is C-specific--use printf instead.

=item fputc

fputc() is C-specific--use print instead.

=item fputs

fputs() is C-specific--use print instead.

=item fread

fread() is C-specific--use read instead.

=item free

free() is C-specific.

=item freopen

freopen() is C-specific--use open instead.

=item frexp


=item fscanf

fscanf() is C-specific--use <> and regular expressions instead.

=item fseek

Use method C<FileHandle::seek()> instead.

=item fsetpos

Use method C<FileHandle::setpos()> instead.

=item fstat


=item ftell

Use method C<FileHandle::tell()> instead.

=item fwrite

fwrite() is C-specific--use print instead.

=item getc

This is identical to Perl's builtin C<getc()> function.

=item getchar

Returns one character from STDIN.

=item getcwd

Returns the name of the current working directory.

=item getegid

Returns the effective group id.

=item getenv

Returns the value of the specified enironment variable.

=item geteuid

Returns the effective user id.

=item getgid

Returns the user's real group id.

=item getgrgid

This is identical to Perl's builtin C<getgrgid()> function.

=item getgrnam

This is identical to Perl's builtin C<getgrnam()> function.

=item getgroups

Returns the ids of the user's supplementary groups.

=item getlogin

This is identical to Perl's builtin C<getlogin()> function.

=item getpgrp

This is identical to Perl's builtin C<getpgrp()> function.

=item getpid

Returns the process's id.

=item getppid

This is identical to Perl's builtin C<getppid()> function.

=item getpwnam

This is identical to Perl's builtin C<getpwnam()> function.

=item getpwuid

This is identical to Perl's builtin C<getpwuid()> function.

=item gets

Returns one line from STDIN.

=item getuid

Returns the user's id.

=item gmtime

This is identical to Perl's builtin C<gmtime()> function.

=item isalnum


=item isalpha


=item isatty

Returns a boolean indicating whether the specified filehandle is connected
to a tty.

=item iscntrl


=item isdigit


=item isgraph


=item islower


=item isprint


=item ispunct


=item isspace


=item isupper


=item isxdigit


=item kill

This is identical to Perl's builtin C<kill()> function.

=item labs

labs() is C-specific, use abs instead.

=item ldexp

This is identical to the C function C<ldexp()>.

=item ldiv

ldiv() is C-specific, use / and int instead.

=item link

This is identical to Perl's builtin C<link()> function.

=item localeconv


=item localtime

This is identical to Perl's builtin C<localtime()> function.

=item log

This is identical to Perl's builtin C<log()> function.

=item log10

This is identical to the C function C<log10()>.

=item longjmp

longjmp() is C-specific: use die instead.

=item lseek


Returns C<undef> on failure.

=item malloc

malloc() is C-specific.

=item mblen


=item mbstowcs


=item mbtowc


=item memchr

memchr() is C-specific, use index() instead.

=item memcmp

memcmp() is C-specific, use eq instead.

=item memcpy

memcpy() is C-specific, use = instead.

=item memmove

memmove() is C-specific, use = instead.

=item memset

memset() is C-specific, use x instead.

=item mkdir

This is identical to Perl's builtin C<mkdir()> function.

=item mkfifo


Returns C<undef> on failure.

=item mktime


Returns C<undef> on failure.

=item modf


=item nice


Returns C<undef> on failure.

=item offsetof

offsetof() is C-specific.

=item open


Returns C<undef> on failure.

=item opendir


=item pathconf

Retrieves the value of a configurable limit on a file or directory.

The following will determine the maximum length of the longest allowable
pathname on the filesystem which holds C</tmp>.

	$path_max = POSIX::pathconf( "/tmp", &POSIX::_PC_PATH_MAX );

Returns C<undef> on failure.

=item pause

This is similar to the C function C<pause()>.

Returns C<undef> on failure.

=item perror

This is identical to the C function C<perror()>.

=item pipe


=item pow

Computes $x raised to the power $exponent.

	$ret = POSIX::pow( $x, $exponent );

=item printf

Prints the specified arguments to STDOUT.

=item putc

putc() is C-specific--use print instead.

=item putchar

putchar() is C-specific--use print instead.

=item puts

puts() is C-specific--use print instead.

=item qsort

qsort() is C-specific, use sort instead.

=item raise

Sends the specified signal to the current process.

=item rand

rand() is non-portable, use Perl's rand instead.

=item read


Returns C<undef> on failure.

=item readdir

This is identical to Perl's builtin C<readdir()> function.

=item realloc

realloc() is C-specific.

=item remove

This is identical to Perl's builtin C<unlink()> function.

=item rename

This is identical to Perl's builtin C<rename()> function.

=item rewind

Seeks to the beginning of the file.

=item rewinddir

This is identical to Perl's builtin C<rewinddir()> function.

=item rmdir

This is identical to Perl's builtin C<rmdir()> function.

=item scanf

scanf() is C-specific--use <> and regular expressions instead.

=item setgid

Sets the real group id for this process.

=item setjmp

setjmp() is C-specific: use eval {} instead.

=item setlocale

Modifies and queries program's locale.

The following will set the traditional UNIX system locale behavior.

	$loc = POSIX::setlocale( &POSIX::LC_ALL, "C" );

=item setpgid


Returns C<undef> on failure.

=item setsid

This is identical to the C function C<setsid()>.

=item setuid

Sets the real user id for this process.

=item sigaction


Returns C<undef> on failure.

=item siglongjmp

siglongjmp() is C-specific: use die instead.

=item sigpending


Returns C<undef> on failure.

=item sigprocmask


Returns C<undef> on failure.

=item sigsetjmp

sigsetjmp() is C-specific: use eval {} instead.

=item sigsuspend


Returns C<undef> on failure.

=item sin

This is identical to Perl's builtin C<sin()> function.

=item sinh

This is identical to the C function C<sinh()>.

=item sleep

This is identical to Perl's builtin C<sleep()> function.

=item sprintf


=item sqrt

This is identical to Perl's builtin C<sqrt()> function.

=item srand

srand().

=item sscanf

sscanf() is C-specific--use regular expressions instead.

=item stat

This is identical to Perl's builtin C<stat()> function.

=item strcat

strcat() is C-specific, use .= instead.

=item strchr

strchr() is C-specific, use index() instead.

=item strcmp

strcmp() is C-specific, use eq instead.

=item strcoll

This is identical to the C function C<strcoll()>.

=item strcpy

strcpy() is C-specific, use = instead.

=item strcspn

strcspn() is C-specific, use regular expressions instead.

=item strerror

Returns the error string for the specified errno.

=item strftime


=item strlen

strlen() is C-specific, use length instead.

=item strncat

strncat() is C-specific, use .= instead.

=item strncmp

strncmp() is C-specific, use eq instead.

=item strncpy

strncpy() is C-specific, use = instead.

=item stroul

stroul() is C-specific.

=item strpbrk

strpbrk() is C-specific.

=item strrchr

strrchr() is C-specific, use rindex() instead.

=item strspn

strspn() is C-specific.

=item strstr

This is identical to Perl's builtin C<index()> function.

=item strtod

strtod() is C-specific.

=item strtok

strtok() is C-specific.

=item strtol

strtol() is C-specific.

=item strxfrm


=item sysconf

Retrieves values of system configurable variables.

The following will get the machine's clock speed.

	$clock_ticks = POSIX::sysconf( &POSIX::_SC_CLK_TCK );

Returns C<undef> on failure.

=item system

This is identical to Perl's builtin C<system()> function.

=item tan

This is identical to the C function C<tan()>.

=item tanh

This is identical to the C function C<tanh()>.

=item tcdrain


Returns C<undef> on failure.

=item tcflow


Returns C<undef> on failure.

=item tcflush


Returns C<undef> on failure.

=item tcgetpgrp

This is identical to the C function C<tcgetpgrp()>.

=item tcsendbreak


Returns C<undef> on failure.

=item tcsetpgrp


Returns C<undef> on failure.

=item time

This is identical to Perl's builtin C<time()> function.

=item times

The times() function returns elapsed realtime since some point in the past
(such as system startup), user and system times for this process, and user
and system times used by child processes.  All times are returned in clock
ticks.

    ($realtime, $user, $system, $cuser, $csystem) = POSIX::times();

Note: Perl's builtin C<times()> function returns four values, measured in
seconds.

=item tmpfile

Use method C<FileHandle::new_tmpfile()> instead.

=item tmpnam

Returns a name for a temporary file.

	$tmpfile = POSIX::tmpnam();

=item tolower

This is identical to Perl's builtin C<lc()> function.

=item toupper

This is identical to Perl's builtin C<uc()> function.

=item ttyname


=item tzname


=item tzset

This is identical to the C function C<tzset()>.

=item umask

This is identical to Perl's builtin C<umask()> function.

=item uname


=item ungetc

Use method C<FileHandle::ungetc()> instead.

=item unlink

This is identical to Perl's builtin C<unlink()> function.

=item utime

This is identical to Perl's builtin C<utime()> function.

=item vfprintf

vfprintf() is C-specific.

=item vprintf

vprintf() is C-specific.

=item vsprintf

vsprintf() is C-specific.

=item wait


=item waitpid


=item wcstombs


=item wctomb


=item write


Returns C<undef> on failure.

=back

=head1 CLASSES

=head2 FileHandle

=over 8

=item new


=item clearerr


=item close


=item eof


=item error


=item fileno


=item flush


Returns C<undef> on failure.

=item getc


=item getpos


=item gets


=item new_from_fd


=item new_tmpfile


=item seek


=item setbuf


=item setpos


Returns C<undef> on failure.

=item setvbuf


Returns C<undef> on failure.

=item tell


=item ungetc


=back

=head2 POSIX::SigAction

=over 8

=item new

Creates a new SigAction object.  This object will be destroyed automatically
when it is no longer needed.

=back

=head2 POSIX::SigSet

=over 8

=item new

Create a new SigSet object.  This object will be destroyed automatically
when it is no longer needed.  Arguments may be supplied to initialize the
set.

Create an empty set.

	$sigset = POSIX::SigSet->new;

Create a set with SIGUSR1.

	$sigset = POSIX::SigSet->new( &POSIX::SIGUSR1 );

=item addset

Add a signal to a SigSet object.

	$sigset->addset( &POSIX::SIGUSR2 );

Returns C<undef> on failure.

=item delset

Remove a signal from the SigSet object.

	$sigset->delset( &POSIX::SIGUSR2 );

Returns C<undef> on failure.

=item emptyset

Initialize the SigSet object to be empty.

	$sigset->emptyset();

Returns C<undef> on failure.

=item fillset

Initialize the SigSet object to include all signals.

	$sigset->fillset();

Returns C<undef> on failure.

=item ismember

Tests the SigSet object to see if it contains a specific signal.

	if( $sigset->ismember( &POSIX::SIGUSR1 ) ){
		print "contains SIGUSR1\n";
	}

=back

=head2 POSIX::Termios

=over 8

=item new

Create a new Termios object.  This object will be destroyed automatically
when it is no longer needed.

	$termios = POSIX::Termios->new;

=item getattr


Returns C<undef> on failure.

=item getcc

Retrieve a value from the c_cc field of a termios object.  The c_cc field is
an array so an index must be specified.

	$c_cc[1] = $termios->getcc(1);

=item getcflag

Retrieve the c_cflag field of a termios object.

	$c_cflag = $termios->getcflag;

=item getiflag

Retrieve the c_iflag field of a termios object.

	$c_iflag = $termios->getiflag;

=item getispeed

Retrieve the input baud rate.

	$ispeed = $termios->getispeed;

=item getlflag

Retrieve the c_lflag field of a termios object.

	$c_lflag = $termios->getlflag;

=item getoflag

Retrieve the c_oflag field of a termios object.

	$c_oflag = $termios->getoflag;

=item getospeed

Retrieve the output baud rate.

	$ospeed = $termios->getospeed;

=item setattr


Returns C<undef> on failure.

=item setcc

Set a value in the c_cc field of a termios object.  The c_cc field is an
array so an index must be specified.

	$termios->setcc( 1, &POSIX::VEOF );

=item setcflag

Set the c_cflag field of a termios object.

	$termios->setcflag( &POSIX::CLOCAL );

=item setiflag

Set the c_iflag field of a termios object.

	$termios->setiflag( &POSIX::BRKINT );

=item setispeed

Set the input baud rate.

	$termios->setispeed( &POSIX::B9600 );

Returns C<undef> on failure.

=item setlflag

Set the c_lflag field of a termios object.

	$termios->setlflag( &POSIX::ECHO );

=item setoflag

Set the c_oflag field of a termios object.

	$termios->setoflag( &POSIX::OPOST );

=item setospeed

Set the output baud rate.

	$termios->setospeed( &POSIX::B9600 );

Returns C<undef> on failure.

=item Baud rate values

B38400 B75 B200 B134 B300 B1800 B150 B0 B19200 B1200 B9600 B600 B4800 B50 B2400 B110

=item Terminal interface values

TCSADRAIN TCSANOW TCOON TCIOFLUSH TCOFLUSH TCION TCIFLUSH TCSAFLUSH TCIOFF TCOOFF

=item c_cc field values

VEOF VEOL VERASE VINTR VKILL VQUIT VSUSP VSTART VSTOP VMIN VTIME NCCS

=item c_cflag field values

CLOCAL CREAD CSIZE CS5 CS6 CS7 CS8 CSTOPB HUPCL PARENB PARODD

=item c_iflag field values

BRKINT ICRNL IGNBRK IGNCR IGNPAR INLCR INPCK ISTRIP IXOFF IXON PARMRK

=item c_lflag field values

ECHO ECHOE ECHOK ECHONL ICANON IEXTEN ISIG NOFLSH TOSTOP

=item c_oflag field values

OPOST

=back

=head1 PATHNAME CONSTANTS

=over 8

=item Constants

_PC_CHOWN_RESTRICTED _PC_LINK_MAX _PC_MAX_CANON _PC_MAX_INPUT _PC_NAME_MAX _PC_NO_TRUNC _PC_PATH_MAX _PC_PIPE_BUF _PC_VDISABLE

=back

=head1 POSIX CONSTANTS

=over 8

=item Constants

_POSIX_ARG_MAX _POSIX_CHILD_MAX _POSIX_CHOWN_RESTRICTED _POSIX_JOB_CONTROL _POSIX_LINK_MAX _POSIX_MAX_CANON _POSIX_MAX_INPUT _POSIX_NAME_MAX _POSIX_NGROUPS_MAX _POSIX_NO_TRUNC _POSIX_OPEN_MAX _POSIX_PATH_MAX _POSIX_PIPE_BUF _POSIX_SAVED_IDS _POSIX_SSIZE_MAX _POSIX_STREAM_MAX _POSIX_TZNAME_MAX _POSIX_VDISABLE _POSIX_VERSION

=back

=head1 SYSTEM CONFIGURATION

=over 8

=item Constants

_SC_ARG_MAX _SC_CHILD_MAX _SC_CLK_TCK _SC_JOB_CONTROL _SC_NGROUPS_MAX _SC_OPEN_MAX _SC_SAVED_IDS _SC_STREAM_MAX _SC_TZNAME_MAX _SC_VERSION

=back

=head1 ERRNO

=over 8

=item Constants

E2BIG EACCES EAGAIN EBADF EBUSY ECHILD EDEADLK EDOM EEXIST EFAULT EFBIG EINTR EINVAL EIO EISDIR EMFILE EMLINK ENAMETOOLONG ENFILE ENODEV ENOENT ENOEXEC ENOLCK ENOMEM ENOSPC ENOSYS ENOTDIR ENOTEMPTY ENOTTY ENXIO EPERM EPIPE ERANGE EROFS ESPIPE ESRCH EXDEV

=back

=head1 FCNTL

=over 8

=item Constants

FD_CLOEXEC F_DUPFD F_GETFD F_GETFL F_GETLK F_OK F_RDLCK F_SETFD F_SETFL F_SETLK F_SETLKW F_UNLCK F_WRLCK O_ACCMODE O_APPEND O_CREAT O_EXCL O_NOCTTY O_NONBLOCK O_RDONLY O_RDWR O_TRUNC O_WRONLY

=back

=head1 FLOAT

=over 8

=item Constants

DBL_DIG DBL_EPSILON DBL_MANT_DIG DBL_MAX DBL_MAX_10_EXP DBL_MAX_EXP DBL_MIN DBL_MIN_10_EXP DBL_MIN_EXP FLT_DIG FLT_EPSILON FLT_MANT_DIG FLT_MAX FLT_MAX_10_EXP FLT_MAX_EXP FLT_MIN FLT_MIN_10_EXP FLT_MIN_EXP FLT_RADIX FLT_ROUNDS LDBL_DIG LDBL_EPSILON LDBL_MANT_DIG LDBL_MAX LDBL_MAX_10_EXP LDBL_MAX_EXP LDBL_MIN LDBL_MIN_10_EXP LDBL_MIN_EXP

=back

=head1 LIMITS

=over 8

=item Constants

ARG_MAX CHAR_BIT CHAR_MAX CHAR_MIN CHILD_MAX INT_MAX INT_MIN LINK_MAX LONG_MAX LONG_MIN MAX_CANON MAX_INPUT MB_LEN_MAX NAME_MAX NGROUPS_MAX OPEN_MAX PATH_MAX PIPE_BUF SCHAR_MAX SCHAR_MIN SHRT_MAX SHRT_MIN SSIZE_MAX STREAM_MAX TZNAME_MAX UCHAR_MAX UINT_MAX ULONG_MAX USHRT_MAX

=back

=head1 LOCALE

=over 8

=item Constants

LC_ALL LC_COLLATE LC_CTYPE LC_MONETARY LC_NUMERIC LC_TIME

=back

=head1 MATH

=over 8

=item Constants

HUGE_VAL

=back

=head1 SIGNAL

=over 8

=item Constants

SA_NOCLDSTOP SIGABRT SIGALRM SIGCHLD SIGCONT SIGFPE SIGHUP SIGILL SIGINT SIGKILL SIGPIPE SIGQUIT SIGSEGV SIGSTOP SIGTERM SIGTSTP SIGTTIN SIGTTOU SIGUSR1 SIGUSR2 SIG_BLOCK SIG_DFL SIG_ERR SIG_IGN SIG_SETMASK SIG_UNBLOCK

=back

=head1 STAT

=over 8

=item Constants

S_IRGRP S_IROTH S_IRUSR S_IRWXG S_IRWXO S_IRWXU S_ISGID S_ISUID S_IWGRP S_IWOTH S_IWUSR S_IXGRP S_IXOTH S_IXUSR

=item Macros

S_ISBLK S_ISCHR S_ISDIR S_ISFIFO S_ISREG

=back

=head1 STDLIB

=over 8

=item Constants

EXIT_FAILURE EXIT_SUCCESS MB_CUR_MAX RAND_MAX

=back

=head1 STDIO

=over 8

=item Constants

BUFSIZ EOF FILENAME_MAX L_ctermid L_cuserid L_tmpname TMP_MAX _IOFBF _IOLBF _IONBF

=back

=head1 TIME

=over 8

=item Constants

CLK_TCK CLOCKS_PER_SEC

=back

=head1 UNISTD

=over 8

=item Constants

R_OK SEEK_CUR SEEK_END SEEK_SET STDIN_FILENO STDOUT_FILENO STRERR_FILENO W_OK X_OK

=back

=head1 WAIT

=over 8

=item Constants

WNOHANG WUNTRACED

=item Macros

WIFEXITED WEXITSTATUS WIFSIGNALED WTERMSIG WIFSTOPPED WSTOPSIG

=back

=head1 CREATION

This document generated by mkposixman.PL version 951129.

