?RCS: $Id: gidtype.U,v 3.0 1993/08/18 12:08:11 ram Exp $
?RCS:
?RCS: Copyright (c) 1991-1993, Raphael Manfredi
?RCS: 
?RCS: You may redistribute only under the terms of the Artistic Licence,
?RCS: as specified in the README file that comes with the distribution.
?RCS: You may reuse parts of this distribution only within the terms of
?RCS: that same Artistic Licence; a copy of which may be found at the root
?RCS: of the source tree for dist 3.0.
?RCS:
?RCS: $Log: gidtype.U,v $
?RCS: Revision 3.0  1993/08/18  12:08:11  ram
?RCS: Baseline for dist 3.0 netwide release.
?RCS:
?MAKE:gidtype: Myread Oldconfig contains Findhdr Setvar
?MAKE:	-pick add $@ %<
?S:gidtype:
?S:	This variable defines Gid_t to be something like gid_t, int,
?S:	ushort, or whatever type is used to declare the return type
?S:	of getgid().  Typically, it is the type of group ids in the kernel.
?S:.
?C:Gid_t (GIDTYPE):
?C:	This symbol holds the return type of getgid() and the type of
?C:	argument to setrgid() and related functions.  Typically,
?C:	it is the type of group ids in the kernel.
?C:	It can be int, ushort, uid_t, etc... It may be necessary to include
?C:	<sys/types.h> to get any typedef'ed information.
?C:.
?H:#define Gid_t $gidtype		/* Type for getgid(), etc... */
?H:.
?T:xxx
?INIT:gidtype=''
: see what type gids are declared as in the kernel
case "$gidtype" in
'')
	if $contains 'gid_t;' `./findhdr sys/types.h` >/dev/null 2>&1 ; then
		dflt='gid_t';
	else
		xxx=`./findhdr sys/user.h`
		set `grep 'groups\[NGROUPS\];' "$xxx" 2>/dev/null` unsigned short
		case $1 in
		unsigned) dflt="$1 $2" ;;
		*) dflt="$1" ;;
		esac
	fi
	;;
*)  dflt="$gidtype";;
esac
echo " "
rp="What is the type for group ids returned by getgid()?"
. ./myread
val="$ans"
set gidtype
eval $setvar
