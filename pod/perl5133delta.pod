=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.13.3

XXX Add links around modules throughout

=head1 DESCRIPTION

This document describes differences between the 5.13.3 release and
the 5.13.2 release.

If you are upgrading from an earlier release such as 5.13.1, first read
L<perl5132delta>, which describes differences between 5.13.1 and
5.13.2.

=head1 Core Enhancements

=head2 \o{...}

The escape sequence C<"\o"> in double-quotish contexts is now defined.  It
must be followed by braces enclosing an octal number of at least one digit.  It
means the character whose ordinal value is that octal number.  This construct
allows large octal ordinals beyond the current max of 0777 to be represented.
It also allows you to specify a character in octal which can safely be
concatenated with other regex snippets without danger of changing its meaning,
and one which won't ever be confused with being a backreference to a regex
capture group.  See L<perlre/Capture groups>

=head2 C<\N{I<name>}> and C<charnames> enhancements

C<\N{}> and C<charnames::vianame> now know about the abbreviated character
names listed by Unicode, such as NBSP, SHY, LRO, ZWJ, etc., as well as all the
customary abbreviations for the C0 and C1 control characters (such as ACK, BEL,
CAN, etc.), as well as a few new variants in common usage of some C1 full
names.

In the past, it was ineffective to override one of Perl's abbreviations with
your own custom alias.  Now it works.

And you can create a custom alias directly to the ordinal of a character, known
by C<\N{...}>, C<charnames::vianame()>, and C<charnames::viacode()>.
Previously, an alias had to be to an official Unicode character name.  This
made it impossible to create an alias for a code point that had no name,
such as the ones reserved for private use.  So this change allows you to make
more effective use of private use characters.  Only if there is no official
name will C<charnames::viacode()> return your custom one.

See L<charnames> for details on all these changes.

=head2 Uppercase X/B allowed in hexadecimal/binary literals

Literals may now use either upper case C<0X...> or C<0B...> prefixes,
in addition to the already supported C<0x...> and C<0b...>
syntax. (RT#76296) (a674e8d)

C, Ruby, Python and PHP already supported this syntax, and it makes
Perl more internally consistent. A round-trip with C<eval sprintf
"%#X", 0x10> now returns C<16> in addition to C<eval sprintf "%#x",
0x10>, which worked before.

=head1 Incompatible Changes

=head2 \400 - \777

Use of C<\400> - C<\777> in regexes in certain circumstances has given different,
anomalous behavior than their use in all other double-quotish contexts.   Since
5.10.1, a deprecated warning message has been raised when this happens.  Now,
all double-quotish contexts have the same behavior, namely to be equivalent to
C<\x{100}> - C<\x{1FF}>, with no deprecation warning. Use of these values in the
command line option C<"-0"> retains the current meaning to slurp input files
whole; previously, this was documented only for C<"-0777">.  It is recommended,
however, because of various ambiguities, to use the new L</\o{...}> construct
to represent characters in octal.

=head1 Deprecations

=head2 Omitting a space between regular expression and subsequent word

Omitting a space between a regex pattern or pattern modifiers and the
following word is deprecated. Deprecation for regular expression matches
was added in Perl 5.13.2.  In this release, the deprecation is extended
to regular expression substitutions. For example, 
C<< s/foo/bar/sand $bar >> will still be parsed as
C<< s/foo/bar/s and $bar >> but will issue a warning.  

=head2 Deprecation warning added for deprecated-in-core .pl libs

This is a mandatory warning, not obeying -X or lexical warning bits.
The warning is modelled on that supplied by deprecate.pm for
deprecated-in-core .pm libraries.  It points to the specific CPAN
distribution that contains the .pl libraries. The CPAN version, of
course, does not generate the warning. (0111154)

=head1 Performance Enhancements

=over 4

=item *

There are several small optimizations to improve CPU cache performance

=back

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

XXX Make sure these get sorted, are phrased similarly and all version
numbers are correct

=over 4

=item *

autodie updated to CPAN version 2.10 (a009834)

=item *

charnames -- viacode() is now significantly faster (f3227b7)

=item *

version now prevents object methods from being called as class methods
(d808b68)

=item *

warnings updated to 1.10.  Calling C<use warnings> without
arguments is now significantly more efficient. (8452af9)

=item *

Archive-Extract updated to CPAN version 0.42 (d7f8799)

Updates since 0.38 include: a safe print method that Michael Schwern
contributed, that guards Archive::Extract from changes to $\; a
fix to the tests when run in core perl from Robin Barker; and
support for TZ files contributed by Paul Marquess, who also supplied a
modification for the lzma logic to favour IO::Uncompress::Unlzma

=item *

Archive-Tar updated to version 1.64 (afabe0e)

Important changes since 1.54 include: compatibility with busybox
implementations of tar which was added by Mark Swayne; a fix so
that write() and create_archive() close only handles
they opened by Darrell K.; and a bug was fixed regarding the exit code
of extract_archive which was spotted by and upstreamed from RedHat by
Martin Cermak.

=item *

Attribute-Handlers updated to CPAN version 0.88 (f2ea78b)

=item *

Compress-Raw-Bzip2 updated to CPAN version 2.027 (9e09409)

=item *

Compress-Raw-Zlib updated  to CPAN version 2.027 (f02c02e)

=item *

CPANPLUS updated to version 0.9007 (d4e225a)

Fix the shell test to skip if test is not being run under a
terminal; resolved the issue where a prereq on Config would not be
recognised as a core module

=item *

Digest-MD5 updated to CPAN version 2.40 (326fafa)

=item *

Digest-SHA updated to CPAN version 5.48 (dfe1edc)

=item *

Exporter no longer overrides C<$SIG{__WARN__}> (RT #74472) (9b86bb5)

=item *

ExtUtils-CBuilder updated to CPAN version 0.2703 (7b0eef9)

=item *

ExtUtils-Manifest updated to CPAN version 1.58 (49c6bc4)

=item *

ExtUtil-ParseXS updated to version 2.2206 (494e8c4)

=item *

File::Copy skips suid tests on a nosuid partition (cae9400)

=item *

IO-Compress upated to CPAN version 2.027 (e8796d6)

=item *

IPC-Cmd updated to CPAN version 0.60 (e667e1e)

=item *

IPC-SysV updated to CPAN version 2.03 (10613b6)

=item * 

Locale::Maketext guts have been merged back into the main module (87d86da)
and adds external cache support (ace47d6)

=item *

Module-Build updated to CPAN version 0.3607 (40c9afb)

=item *

Module-Load updated to CPAN version 0.18 (93eaa32)

=item *

Time-HiRes updated to CPAN version 1.9721 (68c5b4d)

=item *

Time-Piece updated to CPAN version 1.20 (90d55c2)

=item *

Unicode-Collate updated to CPAN version 0.53.  Includes Unicode Collation
Algorithm 18 (74b94a7)

=item *

Unicode-Normalize updated to CPAN release 1.06 (a96160d)

=back

=head1 Documentation

=head2 New Documentation

=head3 L<perl5121delta>

The Perl 5.12.1 perldelta file was added from the Perl maintenance branch

=head2 Changes to Existing Documentation

=head3 General changes

=over

=item *

Octal character escapes in documentation now prefer a three-digit octal 
escape or the new C<\o{}> escape as they have more consistent behavior
in different contexts than other forms. (ce7b6f0) (d8b950d) (e1f120a)

=item *

Documentation now standardizes on the term 'capture group' over 'buffer'
in regular expression documentation (c27a5cf)

=back

=head3 L<perlfunc>

=over

=item *

Added cautionary note about "no VERSION" (e0de7c2)

=item *

Add additional notes regarding srand and forking (d460397)

=back

=head3 L<perlop>

=over 4

=item *

Improved documentation of unusual character escapes (bf82ca4)

=item *

Clarifies how hexadecimal escapes are interpreted, with particular
attention to the treatment of invalid characters. (9644846)

=back

=head3 L<perlrun>

=over

=item *

Clarifies the behavior of the C<-0NNN> switch for C<-0400> or higher (7ba31cb)

=back

=head3 L<perlpolicy>

=over

=item *

Added the policy on compatibility and deprecation along with definitions of
terms like "deprecation" (70e4a83)

=back

=head3 L<perlre>

=over

=item *

Added examples on the perils of not using \g{} when there are more
than nine back-references (9d86067)

=back

=head3 L<perltie>

=over

=item *

Some examples updated for modern Perl style (67d00dd)

=back

=head1 Utility Changes

=head3 L<perldb>

=over

=item *

The remote terminal works after forking and spawns new sessions - one
for each forked process.

=item * 

Uses the less pager path from Config instead of searching for it (bf320d6)

=back

=head1 Configuration and Compilation

=over 4

=item *

Adjusts 'make test.valgrind' to account for cpan/dist/ext separation. (e07ce2e)

=back

=head1 Testing

=over 4

=item *

F<t/harness> clears PERL5LIB, PERLLIB, PERL5OPT as t/TEST does (a2d3de1)

=item *

Many common testing routines were refactored into t/lib/common.pl

=item *

Several test files have been modernized to use Test::More

=back

=head1 Platform Support

=head2 Discontinued Platforms

=over 4

=item MacOS Classic

Support for MacOS Classic within ExtUtils::MakeMaker was removed from Perl in
December 2004.  Vestigial MacOS Classic specific code has now been removed
from other core modules as well.

=back

=head2 Platform-Specific Notes

=over 4

=item Win32

t/io/openpid.t now uses the alarm() watchdog strategy for more
robustness. (5732108)

=back

=head1 Internal Changes

=over 4

=item *

Under some circumstances, the C<CvGV()> field of a CV is now reference
counted. To ensure consistent behaviour, direct assignment to it, for
example C<CvGV(cv) = gv> is now a compile-time error. A new macro,
C<CvGV_set(cv,gv)> has been introduced to perform this operation safely.
Note that modification of this field is not part of of the public API,
regardless of this new macro.

=item *

It is now possible for XS code to hook into Perl's lexical scope
mechanism at compile time, using the new C<Perl_blockhook_register>
function. See L<perlguts/"Compile-time scope hooks">.

=item *

Added C<Perl_croak_no_modify()> to implement 
C<Perl_croak("%s", PL_no_modify)>. (6ad8f25)

=item *

Added prototypes for C<tie()> and C<untie()> to allow overloading. (RT#75902)
(1db4d19)

=item * 

Adds C<my_[l]stat_flags()> to replace C<my_[l]stat()>.  C<my_stat()> and
C<my_lstat()> call get magic on the stack arg, so create C<_flags()>
variants that allow us to control this. (0d7d409)

=back

=head1 Selected Bug Fixes

=over 4

=item *

Some work has been done on the internal pointers that link between symbol
tables (stashes), typeglobs and subroutines. This has the effect that
various edge cases related to deleting stashes or stash entries (e.g.
<%FOO:: = ()>), and complex typeglob or code reference aliasing, will no
longer crash the interpreter.

=item *

Fixed readline() when interrupted by signals so it no longer returns
the "same thing" as before or random memory.

=item *

Fixed a regression of kill() when a match variable is used for the
process ID to kill.  (RT#75812) (8af710e)

=item *

Fixed several subtle bugs in sort() when @_ is accessed within a subroutine
used for sorting. (RT#72334) (8f443ca)

=item *

Catch yyparse() exceptions in C<< (?{...}) >> (RT#2353) (634d691)

=item *

Avoid UTF-8 cache panics with offsets beyond a string (RT #75898) (3e2d381)

=item *

Fixed POSIX::strftime memory leak (RT#73520) (c4bc4aa)

=item *

Doesn't set strict with C<no VERSION> if C<VERSION> is greater than 5.12.
(da8fb5d)

=item *

Avoids multiple FETCH/stringify on filetest ops (40c852d)

=item *

Fixed issue with string C<eval> not detecting taint of overloaded/tied
arguments (RT #75716) (895b760)

=item *

Fix potential crashes of string C<eval> when evaluating a object with
overloaded stringification by creating a stringified copy when necessary
(3e5c018)

=item *

Fixed bug where overloaded stringification could remove tainting
(RT #75716) (a02ec77)

=item *

Plugs more memory leaks in vms.c. (9e2bec0)

=item *

Fix pthread include error for Time::Piece (e9f284c)

=back

=head1 Known Problems

=over 4

=item *

Bug fixes involving CvGV reference counting break L<Sub::Name>.  A
patch has been sent upstream to the maintainer.

=item *

readline() returns an empty string instead of undef when it is
interrupted by a signal.

=back

=head1 Errata

=over 4

=item *

Retroactively added the Acknowledgements list to L<perl5132delta>,
which was excluded in the original release (d1e2db0)

=back

=head1 Acknowledgements

XXX The list of people to thank goes here.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
