=head1 NAME

[ this is a template for a new perldelta file. Any text flagged as
XXX needs to be processed before release. ]

perldelta - what is new for perl v5.11.3

=head1 DESCRIPTION

This document describes differences between the 5.11.2 release and
the 5.11.3 release.

If you are upgrading from an earlier release such as 5.11.3, first read
the L<perl5XXXdelta>, which describes differences between 5.11.3 and
5.10.0

=head1 Notice

XXX Any important notices here

=head1 Incompatible Changes

=over

=item Filehandles are blessed directly into C<IO::Handle::>, as C<FileHandle> is merely a wrapper around C<IO::Handle>.

=back

=head1 Core Enhancements

XXX New core language features go here. Summarise user-visible core language
enhancements. Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

=head2 Unicode version

Perl is shipped with the latest Unicode version, 5.2, October 2009.  See
L<http://www.unicode.org/versions/Unicode5.2.0> for details about this release
of Unicode.

But, an installation can now fairly easily change Perl to operate on any
Unicode release.  Perl is shipped with the latest official release, but
an installation can download and install any prior release from Unicode, and
cause Perl to work with that (or even multiple releases).  Instructions are in
L<perlunicode>.

=head2 Unicode properties

Perl can now handle every Unicode character property.  A new pod,
L<perluniprops>, lists all available non-Unihan character properties.  By
default the Unihan properties and certain others (deprecated and Unicode
internal-only ones) are not exposed.  See below for more details on
these; there is also a section in the pod listing them, and why they are
not exposed.

Perl now fully supports the Unicode compound-style of using C<=> and C<:>
in writing regular expressions: C<\p{property=value}> and
C<\p{property:value}> (both of which mean the same thing).

Perl now supports fully the Unicode loose matching rules for text
between the braces in C<\p{...}> constructs.  In addition, Perl also allows
underscores between digits of numbers.

All the Unicode-defined synonyms for properties and property values are
now accepted.

C<qr/\X/>, which matches a Unicode logical character, has been expanded to work
better with various Asian languages.  It now is defined as an C<extended
grapheme cluster>.  (See L<http://www.unicode.org/reports/tr29/>).  One change
due to this is that C<\X> will match the whole sequence C<S<CR LF>>.  Another
change is that C<\X> will match an isolated mark.  Marks generally come after a
base character, but it is possible in Unicode to have them in isolation, and
C<\X> will now handle that case.  Otherwise, this change should be transparent
for the non-affected languages.

C<\p{...}> matches using the Canonical_Combining_Class property were
completely broken in previous Perls.  This is now fixed.

In previous Perls, the Unicode Decomposition_Type=Compat property and a
Perl extension had the same name, which led to neither matching all the
correct values (with more than 100 mistakes in one, and several thousand
in the other).  The Perl extension has now been renamed to be
Decomposition_Type=Noncanonical (short: dt=noncanon).  It has the same
meaning as was previously intended, namely the union of all the
non-canonical Decomposition types, with Unicode Compat being just one of
those.

C<\p{Uppercase}> and C<\p{Lowercase}> have been brought into line with the
Unicode definitions.  This means they each match a few more characters
than previously.

C<\p{Cntrl}> now matches the same characters as C<\p{Control}>.  This means it
no longer will match Private Use (gc=co), Surrogates (gc=cs), nor Format
(gc=cf) code points.  The Format code points represent the biggest
possible problem.  All but 36 of them are either officially deprecated
or strongly discouraged from being used.  Of those 36, likely the most
widely used are the soft hyphen (U+00AD), and BOM, ZWSP, ZWNJ, WJ, and
similar, plus Bi-directional controls.

C<\p{Alpha}> now matches the same characters as C<\p{Alphabetic}>.  The Perl
definition included a number of things that aren't really alpha (all
marks), while omitting many that were.  The Unicode definition is
clearly better, so we are switching to it.  As a direct consequence, the
definitions of C<\p{Alnum}> and C<\p{Word}> which depend on Alpha also change.

C<\p{Word}> also now doesn't match certain characters it wasn't supposed
to, such as fractions.

C<\p{Print}> no longer matches the line control characters: tab, lf, cr,
ff, vt, and nel.  This brings it in line with the documentation.

\p{Decomposition_Type=Canonical} now includes the Hangul syllables

The Numeric type property has been extended to include the Unihan
characters.

There is a new Perl extension, the 'Present_In', or simply 'In'
property.  This is an extension of the Unicode Age property, but
C<\p{In=5.0}> matches any code point whose usage has been determined as of
Unicode version 5.0.  The C<\p{Age=5.0}> only matches code points added in 5.0.

A number of properties did not have the correct values for unassigned
code points.  This is now fixed.  The affected properties are
Bidi_Class, East_Asian_Width, Joining_Type, Decomposition_Type,
Hangul_Syllable_Type, Numeric_Type, and Line_Break.

The Default_Ignorable_Code_Point, ID_Continue, and ID_Start properties
have been updated to their current definitions.

Certain properties that are supposed to be Unicode internal-only were
erroneously exposed by previous Perls.  Use of these in regular
expressions will now generate a deprecated warning message, if those
warnings are enabled.  The properties are: Other_Alphabetic,
Other_Default_Ignorable_Code_Point, Other_Grapheme_Extend,
Other_ID_Continue, Other_ID_Start, Other_Lowercase, Other_Math, and
Other_Uppercase.

An installation can now fairly easily change which Unicode properties
Perl understands.  As mentioned above, certain properties are by default
turned off.  These include all the Unihan properties (which should be
accessible via the CPAN module Unicode::Unihan) and any deprecated or
Unicode internal-only property that Perl has never exposed.

The files in the To directory are now more clearly marked as being
stable, directly usable by applications.  New hash entries in them give
the format of the normal entries which allows for easier machine
parsing.  Perl can generate files in this directory for any property,
though most are suppressed.  An installation can choose to change which
get written.   Instructions are in L<perluniprops>.

=head1 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not. These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here, in a list ordered by distribution name. Minimally it should be the
module version, but it's more useful to the end user to give a paragraph's
summary of the module's changes. In an ideal world, dual-life modules would
have a F<Changes> file that could be cribbed.

=head2 New Modules and Pragmata

=over 4

=item C<warnings::fatal_enabled>

    Add code and starting perldoc for warnings::fatal_enabled.
    
    This is an analog for warnings::enabled, except it tests whether the
    given category has been set fatal using "use warnings FATAL => foo".
    This is mostly for symmetry.
    
    Assumes that the fatal bit for a category will have an offset one higher
    than the regular bit for the category, because otherwise much rewriting
    of __chk would be required.

XXX

=back

=head2 Pragmata Changes

=over 4

=item Don't make C<use legacy> die on unknown legacy names

So we can use C<use legacy "qubits"> to avoid the new "qubit" behaviour,
without worrying about perls that didn't have qubit support at all. :)

NOTE: C<B<legacy>> will be removed before 5.12.0.


=back

=head2 Updated Modules

=over 4

=item C<XXX>

    Updated CPANPLUS to cpan release 0.90
    Bring up ExtUtils::MakeMaker to 6.56 - no functional changes from 6.55_03
    Upgrade to threads 1.75

    Import CPAN.pm 1.94_53 from CPAN

    Updated Module::Build to 0.35_15
    
    Update Cwd / PathTools to 3.31 to get us a non-devel version number based on a chat with Steffen. No code changes.

    Updated to Pod::Simple 3.11 from CPAN [perl #71004]


    Update Archive::Extract to cpan version 0.36

XXX
=item

    File::Find was not resolving paths of the form "/..////../" correctly.
    Fixed by adding a quantifier to the substitution parameter in
    contract_name().

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go
here. Most of these are built within the directories F<utils> and F<x2p>.

=over 4

=item F<XXX>

XXX

    Perlbug no longer reports "Message sent" when it hasn't actually sent the message

=back

=head1 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=over 4

=item L<XXX>

XXX

=back

=head1 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
Any changes to F<pod/perldiag.pod> should go in L</New or Changed Diagnostics>.


The Pod specification (L<perlpodspec>) has been updated to bring the
specification in line with modern usage already supported by most Pod systems.
A parameter string may now follow the format name in a "begin/end" region.
Links to URIs with a text description are now allowed.  The usage of
C<LE<lt>"section"E<gt>> has been marked as deprecated.

L<if.pm|if> has been documented in L<perlfunc/use> as a means to get
conditional loading of modules despite the implicit BEGIN block around C<use>.



=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here. There
may well be none in a stable release.

=over 4

=item *

XXX

=back

=head1 Installation and Configuration Improvements

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.

=head2 Configuration improvements

XXX

=head2 Compilation improvements

    Make distclean work again
XXX

=head2 Testing improvements

=over 4

=item It's now possible to override C<PERL5OPT> and friends in F<t/TEST>

=back

=head2 Platform Specific Changes

=over 4

=item Win32

=over 4 

=item *

Always add a manifest resource to C<perl.exe> to specify the <trustInfo>
settings for Windows Vista and later.  Without this setting Windows
will treat C<perl.exe> as a legacy application and apply various
heuristics like redirecting access to protected file system areas
(like the "Program Files" folder) to the users "VirtualStore"
instead of generating a proper "permission denied" error.

For VC8 and VC9 this manifest setting is automatically generated by
the compiler/linker (together with the binding information for their
respective runtime libraries); for all other compilers we need to
embed the manifest resource explicitly in the external resource file.

This change also requests the Microsoft Common-Controls version 6.0
(themed controls introduced in Windows XP) via the dependency list
in the assembly manifest.  For VC8 and VC9 this is specified using the
C</manifestdependency> linker commandline option instead.

=back

=item cygwin

=over 4

=item Enable IPv6 support on cygwin 1.7 and newer

=back

=item OpenVMS

=over 4

=item Make -UDEBUGGING the default on VMS for 5.12.0.

Like it has been everywhere else for ages and ages.  Also make
command-line selection of -UDEBUGGING and -DDEBUGGING work in
configure.com; before the only way to turn it off was by saying
no in answer to the interactive question.

=back

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarised here.
Bug fixes in files in F<ext/> and F<lib/> are best summarised in
L</Modules and Pragmata>.

=over 4

=item *

Ensure that pp_qr returns a new regexp SV each time. Resolves RT #69852.

Instead of returning a(nother) reference to the (pre-compiled) regexp in the
optree, use reg_temp_copy() to create a copy of it, and return a reference to
that. This resolves issues about Regexp::DESTROY not being called in a timely
fashion (the original bug tracked by RT #69852), as well as bugs related to
blessing regexps, and of assigning to regexps, as described in correspondence
added to the ticket.

It transpires that we also need to undo the SvPVX() sharing when ithreads
cloning a Regexp SV, because mother_re is set to NULL, instead of a cloned
copy of the mother_re. This change might fix bugs with regexps and threads in
certain other situations, but as yet neither tests nor bug reports have
indicated any problems, so it might not actually be an edge case that it's
possible to reach.

=item  *

Several compilation errors and segfaults when perl was built with C<-Dmad> were fixed.

=item *

Fixes for lexer API changes in 5.11.2 which broke NYTProf's savesrc option.

=back

=head1 New or Changed Diagnostics

XXX New or changed warnings emitted by the core's C<C> code go here.

=over 4

=item C<XXX>

    Make split warn in void context
XXX

=back

=head1 Changed Internals

XXX Changes which affect the interface available to C<XS> code go here.

=over 4

=item *

XXX

=back

=head1 New Tests

XXX Changes which create B<new> files in F<t/> go here. Changes to
existing files in F<t/> aren't worth summarising, although the bugs that
they represent may be.

=over 4

=item F<XXX>

XXX

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here. Any
tests that had to be C<TODO>ed for the release would be noted here, unless
they were specific to a particular platform (see below).

This is a list of some significant unfixed bugs, which are regressions
from either 5.11.3 or 5.11.3.

=over 4

=item *

XXX

=back

=head1 Deprecations

XXX Add any new known deprecations here.

The following items are now deprecated.

=over 4

=item Use of "goto" to jump into a construct is deprecated

Using C<goto> to jump from an outer scope into an inner
scope is now deprecated. This rare use case was causing
problems in the implementation of scopes.

=back

=head1 Platform Specific Notes

XXX Any changes specific to a particular platform. VMS and Win32 are the usual
stars here. It's probably best to group changes under the same section layout
as the main perldelta

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX The list of people to thank goes here.


=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut




All changes through commit b4178430270dbe109e7609d0b50d6d54bf9e95d8
One "triage" pass done.

A second triage pass is still needed to remove unimportant changes

commit 9307c420fad2f6f5bd314f9ed66dd53288703e09
Author: Jan Dubois <jand@activestate.com>
Date:   Thu Dec 17 18:28:16 2009 -0800

    Export PL_curinterp symbol for MULTIPLICITY without USE_ITHREADS
    
    This is necessary for XS extensions that define PERL_CORE.  In that
    situation PERL_GET_CONTEXT will resolve to PL_curinterp, which is
    normally not exported (extensions call Perl_Gcurinterp_ptr() to get a
    pointer to PL_curinterp instead). With USE_ITHREADS defined
    PERL_GET_CONTEXT will expand to Perl_get_context() even inside the
    core because the context needs to be fetched from threadlocal storage.

commit 8703a9a4fd75723318bc4ba1afc42a215806f2d1

    Correct some #ifdef USE_ITHREADS / USE_MULTI 

Author: Jan Dubois <jand@activestate.com>
Date:   Wed Dec 16 15:42:19 2009 -0800

    -t should only return TRUE for file handles connected to a TTY
    
    The Microsoft C version of isatty() returns TRUE for all
    character mode devices, including the /dev/null style "nul"
    device and printers like "lpt1".
    
    The included test has only been tested on Windows and Linux;
    the device names for OS/2 and VMS are just best guesses...

commit 0f907b96d618c97cd2e020841a70ae037954a616

    [perl #70171] 5.10.0 -> 5.10.1 Regression in fafafbaf70 (Big slowdown in 5.10 @_ parameter passing)
    
commit 2ab54efd6265713df5cd4bd0927024245675c1c2

    fix bug 67156: overload: nomethod(..., '!') return value inverted

commit 412147f664b7f5805591ad996d7e5a9e70b3d80f

    [perl #71204] diagnostics.pm suppresses 'Use of uninitialized value in range (or flip)' warning
    

commit 69dc4b30f4725ad5f212d45d3c856ac1caaacf17
Author: Father Chrysostomos <sprout@cpan.org>
Date:   Mon Dec 14 12:19:35 2009 +0100

    [perl #70764] $' fails to initialized for pre-compiled regular expression matches
    
    The match vars are associated with the regexp that last matched
    successfully. In the case of $str =~ $qr or /$qr/, since the $qr could
    be used in multiple scopes that need their own sets of match vars, the
    $qr is cloned by Perl_reg_temp_copy as of change 30677/28d8d7f. This
    happens in pp_regcomp before pp_match has stringified the LHS, hence the
    bug. In short, /$gror/ is not equivalent to
    ($which = !$which) ? /$gror/ : /$gror/, which is weird.
    
Author: Reini Urban <rurban@x-ray.at>
Date:   Sun Dec 13 08:06:43 2009 +0100

    Eliminate OP_SETSTATE from cop.h header
    
    It had been added with change 3728 to track linenumbers in
    optimized else, disabled by change 4309,
    and removed with change 33072.
    
    Bump copyright, latest change was "Fix MULTICALL in List-Util" 2009-03-07
    with commit 1bbbfc50


    Fix for [perl #70910] wrong line number in syntax error message

    Document config_args limitations reported in [perl #70912]

    proper error on "grep $x (1,2,3)". Solves [perl #37314]

commit 8a27a13e89107aaf68c0748b68ee71fbd86d774b

    [perl #71076] sort with active sub (5.10 regression)
    
    One of the tests in sort.t causes a bus error (or sometimes âUndefined
    subroutine calledâ) if run multiple times. This is because sort
    decreases the refcount of an active sub used as a comparison routine.
    
commit 69c3dccf5322a59cb855347c04712ba11b65328f

    Fix [perl #71078] Smart match against @_ gives false negatives
    
    @_ can contain NULLs for undefined elements

    [perl #71000] Wrong variable name in warning ; Add a new warning "Missing argument in %s"


    preserve readonly flag when saving and restoring magic flags

commit c9930541bfa04399c3b648e83c9b750cee1154fb

    [perl #70802] -i'*' refuses to work

commit adab996997d7ef1b54d382f5ab4304f438cd1dd0

    Cleanup all scopes before exiting a pseudo-forked process.
    
    perl_destruct() contains an assertion that the scope stack
    is empty.  The remaining scopes are due to fork() being
    called from within a BEGIN block.

commit 576b33a19ccaf98d4dfe201d529c55c3747f0cb6

    [rt.cpan.org #51574] Safe.pm sort {} bug accessing $a and $b with -Dusethreads

commit ee6ba15dedda3e88eb66891eaf387c00a4c0a2fb

    Fix -DPERL_NO_UTF16_FILTER

commit dfd167e94af611f6248e804cb228b35ca4123bd6

    Handle $@ being assigned a read-only value (without error or busting the stack).
    
    Discovered whilst investigating RT #70862.

commit f5fa9033b8c1fdcbd7710850b3b0380d6b937853

    Fix RT #70862 by converting ERRSV to GvSVn() to ensure a non-NULL GvSV().

commit ff868e665bf85a829dc47bfa1243b26d4367cacd

    Add error codes for getaddrinfo() and getnameinfo()

commit 61fc5122f0d8a509834282b8ecb3252d2e4c9f5d

    Make unicode semantics the default

    *****************

commit 021f53de09926928546378b3552f9240c9241dde
Author: Gerard Goossen <gerard@ggoossen.net>
Date:   Mon Nov 16 13:58:24 2009 +0100

    Force OP_REQUIRE to scalar context at the end of ck_require and don't let it become void context. Fixes problem with require not always being in scalar context.

commit 6a0e50422a84b53e998825128c56791913cd03aa
Author: Craig A. Berry <craigberry@mac.com>
Date:   Sat Nov 21 11:17:38 2009 -0600

