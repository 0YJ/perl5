=head1 NAME

[ Any text flagged as XXX needs to be processed before release. ]

perldelta - what is new for perl v5.11.1

=head1 DESCRIPTION

This document describes differences between the 5.11.0 release and
the 5.11.1 release.

=head1 Notice

XXX Notice

=head1 Incompatible Changes

=over 

=item The boolkeys op moved to the group of hash ops. This breaks binary compatibility.


=item C<Perl_deprecate()> was replaced with a macro that calls C<Perl_ck_warner()>

C<Perl_deprecate> was not part of the public API, and did not have a C<deprecate()>
shortcut macro defined without C<-DPERL_CORE>. Neither codesearch.google.com nor
CPAN::Unpack show any users outside the Perl core.

=back

=head1 Core Enhancements

=head2 Add C<package NAME VERSION> syntax

    This patch adds support for setting the $VERSION of a namespace
    when the namespace is declared with 'package'.  It eliminates the
    need for 'our $VERSION = ...' and similar constructs.  E.g.

      package Foo::Bar 1.23;
      # $Foo::Bar::VERSION == 1.23

    There are several advantages to this:

      * VERSION is parsed in *exactly* the same way as 'use NAME VERSION'

      * $VERSION is set at compile time

      * Eliminates '$VERSION = ...' and 'eval $VERSION' clutter

      * As it requires VERSION to be a numeric literal or v-string
        literal, it can be statically parsed by toolchain modules
        without 'eval' the way MM->parse_version does for '$VERSION = ...'

      * Alpha versions with underscores do not need to be quoted; static
        parsing will preserve the underscore, but during compilation, Perl
        will remove underscores as it does for all numeric literals

    During development of this, there was discussion on #corehackers and
    elsewhere that this should also allow other metadata to be set such as
    "status" (stable/alpha) or "author/authority".  On reflection, those
    metadata are not very well defined yet and likely should never be
    encoded into Perl core parsing so they can be freely changed in the
    future.  (They could perhaps be achieved via a comment on the same line
    as 'package NAME VERSION'.)

    Version numbers, however, already have a very specific definition and
    use defined in the core through 'use NAME VERSION'.  This patch merely
    provides appropriate symmetry for setting $VERSION with the exact same
    parsing and semantics as 'use'.

    It does not break old code with only 'package NAME', but code that
    uses 'package NAME VERSION' will need to be restricted to perl 5.11.X.
    This is analogous to the change to open() from two-args to three-args.
    Users requiring the latest Perl will benefit, and perhaps N years from
    now it will become standard practice when Perl 5.12 is targeted the
    way that 5.6 is today.

    The patch does not prevent 'package NAME VERSION' from being used
    multiple times for the same package with different version numbers, but
    nothing prevents $VERSION from being modified arbitrarily at runtime,
    either, so I see no urgen reason to add limitations or warnings so
    long as Perl uses a global $VERSION variable for package version
    numbers.

    I am posting this patch to the p5p list for discussion and review.  If
    there seems to be general assent (or lack of dissent), I will go ahead
    and commit the patch to blead.


=head1 Modules and Pragmata

=over 4 

=item Upgrade to Test-Simple-0.94

=item Upgrade to Storable-2.21

=item Upgrade to Pod-Simple-3.08

=item Upgrade to Parse-CPAN-Meta-1.40

=item Upgrade to ExtUtils-Manifest-1.57

=item Upgrade to ExtUtils-CBuilder-0.260301

=item Upgrade to CGI.pm-3.48

=item Update CPANPLUS to CPAN version 0.89_02

=item Upgrade to threads::shared 1.32

=item Update ExtUtils::ParseXS to 2.21

=item Upgrade File::Path to 2.08 (and add taint.t test)

=item Upgrade Module::CoreList to 2.20

=item Updated Object-Accessor to CPAN version 0.36

=back

=head2 New Modules and Pragmata

=over 4

=item C<XXX>

XXX

=back

=head2 Pragmata Changes

=over 4

=item C<XXX>

XXX

=back

=head2 Updated Modules

=over 4

=item C<XXX>

XXX

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go
here. Most of these are built within the directories F<utils> and F<x2p>.

=over 4

=item F<XXX>

XXX

=back

=head1 New Documentation

=over 4

=item L<pod/perlpolicy.pod> extends the "Social contract about contributed modules" into the beginnings of a document on Perl porting policies.

=back

=head1 Changes to Existing Documentation

=over 

=item Documentation for C<$1> in perlvar.pod clarified

=back

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here. There
may well be none in a stable release.

=over 4

=item C<if (%foo)> has been optimized to be faster than C<if (keys %foo)>

XXX

=back

=head1 Installation and Configuration Improvements

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.

=head2 Configuration improvements

XXX

=head2 Compilation improvements

XXX

=head2 Platform Specific Changes

=over 4

=item Darwin (Mac OS X)

=over 4

=item Skip testing the be_BY.CP1131 locale on Darwin 10 (Mac OS X 10.6),
as it's still buggy.

=item Correct infelicities in the regexp used to identify buggy locales
on Darwin 8 and 9 (Mac OS X 10.4 and 10.5, respectively).

=back

=item DragonFly BSD

=over 4

=item Fix thread library selection [perl #69686]

=back

=item Win32

=over 4

=item Initial support for mingw64 is now available

=back


=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarised here.
Bug fixes in files in F<ext/> and F<lib/> are best summarised in
L</Modules and Pragmata>.

=over 4

=item Perl now properly returns a syntax error instead of segfaulting
if C<each>, C<keys> or C<values> is used without an argument

=item C<tell()> now fails properly if called without an argument and when no previous file was read

C<tell()> now returns C<-1>, and sets errno to C<EBADF>, thus restoring the 5.8.x behaviour

=item overload no longer implicitly unsets fallback on repeated 'use overload' lines

=back

=head1 New or Changed Diagnostics

XXX New or changed warnings emitted by the core's C<C> code go here.

=over 4


=item The 'syntax' category was removed from 5 warnings that should only be in 'deprecated'.

=item Three fatal pack/unpack error messages have been normalized to "panic: %s"

=item "Unicode character is illegal" has been rephrased to be more accurate

It now reads C<Unicode non-character is illegal in interchange> and the
perldiag documentation has been expanded a bit.

=item Perl now defaults to issuing a warning if a deprecated language feature is used.

To disable this feature in a given lexical scope, you should use C<no
warnings 'deprecated';> For information about which language features
are deprecated and explanations of various deprecation warnings, please
see L<perldiag.pod>

=back

=head1 Changed Internals

XXX Changes which affect the interface available to C<XS> code go here.

=over 4

=item *

XXX

=back

=head1 Testing

XXX Changes which create B<new> files in F<t/> go here. Changes to
existing files in F<t/> aren't worth summarising, although the bugs that
they represent may be.

=over 4

=item Significant cleanups to core tests to ensure that language and
interpreter features are not used before they're tested.

=item F<t/porting/podcheck.t> automatically checks the well-formedness of
POD found in all .pl, .pm and .pod files in the F<MANIFEST>, other than in
dual-lifed modules which are primarily maintained outside the Perl core.

=item F<t/porting/manifest.t> now tests that all files listed in MANIFEST are present.

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here. Any
tests that had to be C<TODO>ed for the release would be noted here, unless
they were specific to a particular platform (see below).

This is a list of some significant unfixed bugs, which are regressions
from either 5.10.1 or 5.11.0.

=over 4

=item *

XXX

=back

=head1 Deprecations

XXX Add any new known deprecations here.

The following items are now deprecated.

=over 4

=item *

XXX

=back

=head1 Platform Specific Notes

XXX Any changes specific to a particular platform. VMS and Win32 are the usual
stars here. It's probably best to group changes under the same section layout
as the main perldelta


=head1 Errata


k=item The Perl 5.11.0 release notes incorrectly described 'delete local'


=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX The list of people to thank goes here.


=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the B<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes all the core committers, who be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut

This is all changes through 704e1b1e



commit a44d0896a6c4bfe01ea532694b8c1c073ea6a2f1
Author: Nicholas Clark <nick@ccl4.org>
Date:   Thu Oct 15 23:37:41 2009 +0100

    POSIX::strftime() should be able to handle Unicode characters in the format string.

commit e4d771f5006ebd70b76422437cce60e9ac40c830
Author: Jan Dubois <jand@activestate.com>
Date:   Tue Oct 13 16:46:58 2009 -0700

    The winsock select() implementation doesn't support all empty 'fd_set's.

    The code already contained a workaround for the special case

        select(undef, undef, undef, $sleep);

    but didn't handle the case when actual bit vectors were passed in
    that didn't have any bits set.

    Fixes http://rt.perl.org/rt3/Public/Bug/Display.html?id=54544





    Add perltodo: write an XS cookbook

    Explain using git send-email for patches



 =TODO FOR RELENG GUIDE   Make Module::Corelist recognise $] as a version number on 5.11.0

