=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.15.9

=head1 DESCRIPTION

This document describes differences between the 5.15.8 release and
the 5.15.9 release.

If you are upgrading from an earlier release such as 5.15.7, first read
L<perl5158delta>, which describes differences between 5.15.7 and
5.15.8.

=head1 Notice

This space intentionally left blank.

=head1 Core Enhancements

=head2 C<< no feature; >> now means reset to default

C<< no feature >> now resets to the default feature set.  To disable all
features (which is likely to be a pretty special-purpose request, since
it presumably won't match any named set of semantics) you can now  
write C<< no feature ':all' >>.

=head1 Security

There have been no security related fixed between 5.15.8 and 5.15.9.

=head1 Incompatible Changes

=head2 C<< no feature; >>

C<no feature;> now means reset to default.

=head1 Deprecations

=head2 Literal C<< "{" >> characters in regular expressions.

It has been documented that the current plans include requiring a
literal C<< "{" >> to be escaped: 5.18 will emit deprecation warnings,
and it will be required in 5.20.

=head1 Performance Enhancements

=over 4

=item *

Fix a slowdown in freeing nested hashes. This may speedup the exit of 
certain programs.

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>, which prints stub
entries to STDOUT.  Results can be pasted in place of the '=head2' entries
below.  A paragraph summary for important changes should then be added by hand.
In an ideal world, dual-life modules would have a F<Changes> file that could be
cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<B::Deparse> has been upgrade from version 1.11 to 1.12

This fixes a post-v5.14 regression in deparsing C<say> (I<etc>) under
C<use 5.10.0;>.

=item *

L<feature> has been upgraded from version 1.26 to 1.27

C<no feature;> now means reset to default.

The code has been refactored to reduce duplication.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

There has been no significant change in the documentation between 
5.15.8 and 5.15.9.

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

Compared to 5.15.8, 5.15.9 does not introduce new errors.

=head3 New Warnings

Compared to 5.15.8, 5.15.9 does not introduce new errors, but see
L</Changes to Existing Diagnostics>

=head2 Changes to Existing Diagnostics

=over 4

=item *

L<lvalue attribute %s already-defined subroutine|perldiag/"lvalue attribute %s already-defined subroutine">, which replaces
C<< lvalue attribute cannot be removed after the subroutine has been defined >>.

=back

=head1 Utility Changes

No utilities changed between 5.15.8 and 5.15.9.

=head1 Configuration and Compilation

=over 4

=item *

C<< perlfunc.html >> is now being generated again. [perl #107870]

=back

=head1 Testing

=over 4

=item *

F<< t/op/require_37033.t >> has been added, to test that C<require>
always closes the file handle that it opens. Previously, it had been
leaking the file handle if it happened to have file descriptor 0, which
would happen if C<require> was called (explicitly or implicitly) when
C<STDIN> had been closed.

=back

=head1 Platform Support

There have been no changes to Perl's support of various platforms between
5.15.8 and 5.15.9.

=head1 Internal Changes

There has been no change that affects the interface available to C<< XS >>
between 5.15.8 and 5.15.9.

=head1 Selected Bug Fixes

=over 4

=item *

I<Takri> now matches two more characters under the C<Script_Extensions>
property. This corrects a Unicode 6.1 omission.

=item *

C<< perlfunc.html >> is now being generated again. [perl #107870]

=item *

C<< $$ >> is no longer tainted. Since this value comes directly from
C<< getpid() >>, it is always safe.

=item *

Fix leaking a file handle. [perl #37033]

=item *

An off-by-one error caused C<< /[:upper:]/ >> and C<< /[:punct:]/ >> to
unexepectly match characters with code points above 255. This has been
rectified. [perl 111400].

=item *

C<< (?foo: ...) >> no longer loses passed in character set.

=item *

Allow attributes to set C<< :lvalue >> on a defined sub. [perl 107366].

=item *

C<< die; >> with a non-reference, non-string value in $@ now properly
propgates that value [perl #111654].

=item *

C<< Term::ReadLine >> now uses AnyEvent instead of Tk for an event loop.

=back

=head1 Known Problems

This is a list of some significant unfixed bugs, which are regressions
from either 5.14.0 or 5.15.8.

=over 4

=item C<eval { 'fork()' }> is broken on Windows [perl #109718]

This is a known test failure to be fixed before 5.16.0. 

=item C<< Pod-Html >> test failures on Windows.

A number of tests for C<< Pod::Html >> fail under Windows, due to an 
incorrect assumption by the test scripts about capitalization of the
network drive.

=back

=head1 Acknowledgements

XXX Redo this on 2012-03-20

Perl 5.15.9 represents approximately 4 weeks of development since Perl 5.15.8
and contains approximately 74,000 lines of changes across 470 files from 23
authors.

Perl continues to flourish into its third decade thanks to a vibrant community
of users and developers. The following people are known to have contributed the
improvements that became Perl 5.15.9:

Aaron Crane, Abigail, Chris 'BinGOs' Williams, Craig A. Berry, Dave Rolsky,
David Cantrell, David Golden, David Mitchell, Eric Brine, Father Chrysostomos,
Florian Ragwitz, James E Keenan, Jesse Vincent, Karl Williamson, Marc Green,
Max Maischein, Nicholas Clark, Pau Amma, Reini Urban, Ricardo Signes, Tony
Cook, Yves Orton, Zefram.

The list above is almost certainly incomplete as it is automatically generated
from version control history. In particular, it does not include the names of
the (very much appreciated) contributors who reported issues to the Perl bug
tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please see
the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes
all the core committers, who will be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
