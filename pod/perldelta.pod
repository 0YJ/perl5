=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.25.3

=head1 DESCRIPTION

This document describes differences between the 5.25.2 release and the 5.25.3
release.

If you are upgrading from an earlier release such as 5.25.1, first read
L<perl5252delta>, which describes differences between 5.25.1 and 5.25.2.

=head1 Core Enhancements

=head2 Unicode 9.0 is now supported

A list of changes is at L<http://www.unicode.org/versions/Unicode9.0.0/>.
Modules that are shipped with core Perl but not maintained by p5p do not
necessarily support Unicode 9.0.  L<Unicode::Normalize> does work on 9.0.

=head2 Use of C<\p{I<script>}> uses the improved Script_Extensions property

Unicode 6.0 introduced an improved form of the Script (C<sc>) property, and
called it Script_Extensions (C<scx>).  As of now, Perl uses this improved
version when a property is specified as just C<\p{I<script>}>.  The meaning of
compound forms, like C<\p{sc=I<script>}> are unchanged.  This should make
programs be more accurate when determining if a character is used in a given
script, but there is a slight chance of breakage for programs that very
specifically needed the old behavior.  See L<perlunicode/Scripts>.

=head2 Declaring a reference to a variable

As an experimental feature, Perl now allows the referencing operator to come
after L<C<my()>|perlfunc/my>, L<C<state()>|perlfunc/state>,
L<C<our()>|perlfunc/mour>, or L<C<local()>|perlfunc/local>.  This syntax must
be enabled with C<use feature 'declared_refs'>.  It is experimental, and will
warn by default unless C<no warnings 'experimental::refaliasing'> is in effect.
It is intended mainly for use in assignments to references.  For example:

    use experimental 'refaliasing', 'declared_refs';
    my \$a = \$b;

See L<perlref/Assigning to References> for slightly more detail.

=head1 Incompatible Changes

=head2 C<${^ENCODING}> has been removed

Consequently, the L<encoding> pragma's default mode is no longer supported.  If
you still need to write your source code in encodings other than UTF-8, use a
source filter such as L<Filter::Encoding> on CPAN or L<encoding>'s C<Filter>
option.

=head2 C<scalar(%hash)> return signature changed

The value returned for C<scalar(%hash)> will no longer show information about
the buckets allocated in the hash.  It will simply return the count of used
keys.  It is thus equivalent to C<0+keys(%hash)>.

A form of backwards compatibility is provided via C<Hash::Util::bucket_ratio()>
which provides the same behavior as C<scalar(%hash)> provided prior to Perl
5.25.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Module::CoreList> has been upgraded from version 5.20160620 to 5.20160720.

=item *

L<XSLoader> has been upgraded from version 0.21 to 0.22, fixing a security hole
in which binary files could be loaded from a path outside of
L<C<@INC>|perlvar/@INC>.

=item *

L<encoding> has been upgraded from version 2.17 to 2.17_01.

This module's default mode is no longer supported as of Perl 5.25.3.  It now
dies when imported, unless the C<Filter> option is being used.

=item *

L<encoding::warnings> has been upgraded from version 0.12 to 0.13.

This module is no longer supported as of Perl 5.25.3.  It emits a warning to
that effect and then does nothing.

=back

=head1 Documentation

=head2 Changes to Existing Documentation

=head3 L<XXX>

=over 4

=item *

XXX Description of the change here

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

=head2 New Diagnostics

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head1 Configuration and Compilation

=over 4

=item *

XXX

=back

=head1 Testing

=over 4

=item *

XXX

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item XXX-some-platform

XXX

=back

=head1 Selected Bug Fixes

=over 4

=item *

An assertion failure with C<%: = 0> has been fixed. [perl #128238]

=item *

In Perl 5.18, the parsing of C<"$foo::$bar"> was accidentally changed, such
that it would be treated as C<$foo."::".$bar>.  The previous behavior, which
was to parse it as C<$foo:: . $bar>, has been restored. [perl #128478]

=item *

Since Perl 5.20, line numbers have been off by one when perl is invoked with
the B<-x> switch.  This has been fixed. [perl #128508]

=item *

Vivifying a subroutine stub in a deleted stash (e.g., C<delete $My::{"Foo::"};
\&My::Foo::foo>) no longer crashes.  It had begun crashing in Perl 5.18.
[perl #128532]

=item *

Some obscure cases of subroutines and file handles being freed at the same time
could result in crashes, but have been fixed.  The crash was introduced in Perl
5.22. [perl #128597]

=back

=head1 Errata From Previous Releases

=over 4

=item *

Parsing bad POSIX charclasses no longer leaks memory.  This was fixed in Perl
5.25.2 [perl #128313]

=item *

Fixed issues with recursive regexes.  The behavior was fixed in Perl 5.24.0.
[perl #126182]

=back

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.25.2..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database at
L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION> for details of how to
report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
