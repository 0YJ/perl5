=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file.  Any text flagged as XXX needs
to be processed before release. ]

perldelta - what is new for perl v5.25.7

=head1 DESCRIPTION

This document describes differences between the 5.25.6 release and the 5.25.7
release.

If you are upgrading from an earlier release such as 5.25.5, first read
L<perl5256delta>, which describes differences between 5.25.5 and 5.25.6.

=head1 Core Enhancements

XXX New core language features go here.  Summarize user-visible core language
enhancements.  Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

[ List each enhancement as a =head2 entry ]

=head2 Indented Here-documents

This adds a new modifier '~' to here-docs that tells the parser
that it should look for /^\s*$DELIM\n/ as the closing delimiter.

These syntaxes are all supported:

    <<~EOF;
    <<~\EOF;
    <<~'EOF';
    <<~"EOF";
    <<~`EOF`;
    <<~ 'EOF';
    <<~ "EOF";
    <<~ `EOF`;

The '~' modifier will strip, from each line in the here-doc, the
same whitespace that appears before the delimiter.

Newlines will be copied as is, and lines that don't include the
proper beginning whitespace will cause perl to croak.

For example:

    if (1) {
      print <<~EOF;
        Hello there
        EOF
    }

prints "Hello there\n" with no leading whitespace.

=head2 '.' and @INC

Perl now provides a way to build perl without C<.> in @INC by default. If you
want this feature, you can build with -Ddefault_inc_excludes_dot

Because the testing / make process for perl modules do not function well with
C<.> missing from @INC, Perl now supports the environment variable
PERL_USE_UNSAFE_INC=1 which makes Perl behave as it previously did, returning
C<.> to @INC in all child processes.

WARNING: PERL_USE_UNSAFE_INC has been provided during the perl 5.25 development
cycle and is not guaranteed to function in perl 5.26.

=head2 create a safer utf8_hop() called utf8_hop_safe()

Unlike utf8_hop(), utf8_hop_safe() won't navigate before the beginning or after
the end of the supplied buffer.

=head2 Fix taint handling in list assignment

commit v5.25.6-79-gb09ed99 reworked list assignment, and
accidentally broke taint handling at the same time.

=head2 @{^CAPTURE}, %{^CAPTURE}, and %{^CAPTURE_ALL}

@{^CAPTURE} exposes the capture buffers of the last match as an array. So $1 is
${^CAPTURE}[0].

%{^CAPTURE} is the equivalent to %+ (ie named captures)

%{^CAPTURE_ALL} is the equivalent to %- (ie all named captures).

=head2 hv.h: rework HEK_FLAGS to a proper member in struct hek

Move the store of HEK_FLAGS off the end of the allocated hek_key into the hek
struct, simplifying access and providing clarity to the code.

=head2 op.c: silence compiler warning in fold_constants()

    op.c: In function ‘S_fold_constants’:
    op.c:4374:28: warning: argument ‘o’ might be clobbered by ‘longjmp’ or ‘vfork’ [-Wclobbered]
     S_fold_constants(pTHX_ OP *o)
                                ^

This warning has been silenced.

=head2 White space changed to avoid C++ deprecation warning

C++11 requires space between the end of a string literal and a macro, so that a
feature can unambiguously be added to the language.  Starting in g++ 6.2, the
compiler emits a warning when there isn't a space (presumably so that future
versions can support C++11)

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head2 Eliminate OPpRUNTIME private PMOP flag

This flag was added in 5.004 and even then it didn't seem to be used for
anything. It gets set and unset in various places, but is never tested.

=head2 Eliminate SVpbm_VALID flag

This flag is set on an SV to indicate that it has PERL_MAGIC_bm (fast
Boyer-Moore) magic attached. Instead just directly check whether it has such
magic.

=head2 Eliminate SVpbm_TAIL/SvTAIL_on()/SvTAIL_off()

This flag is only set on SVs that have Boyer-Moore magic attached. Such SVs
already re-purpose the unused IVX slot of that  SV to store BmUSEFUL. This
commit repurposes the unused NVX slot to store this boolean value instead.

=head2 Eliminate SVrepl_EVAL and SvEVALED()

This flag is only used to indicate that the SV holding the text of the
replacement part of a s/// has seen at least one /e.  Instead, set the IVX
field in the SV to a true value. (We already set the NVX field on that SV to
indicate a multi-src-line substitution).

=head2 metaconfig.h

Document that symbols should be removed from metaconfig.h

Remove almost-all symbols from metaconfig.h

=head2 Change hv_fetch(…, "…", …, …) to hv_fetchs(…, "…", …)

The dual-life dists all use Devel::PPPort, so they can use this function even
though it was only added in 5.10.

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.

=head2 Module removals

XXX Remove this section if inapplicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

=item XXX

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

[ List each other deprecation as a =head2 entry ]

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here.
There may well be none in a stable release.

[ List each enhancement as a =item entry ]

=over 4

=item *

Reduce cost of SvVALID().

=item *

C<$ref1 = $ref2> has been optimized.

=item *

Array and hash assignment are now faster, e.g.

    (..., @a) = (...);
    (..., %h) = (...);

especially when the RHS is empty.

=item *

Reduce the number of odd special cases for the SvSCREAM flag.

=item *

Aavoid sv_catpvn() in do_vop() when unneeded.

=item *

Enhancements in Regex concat COW implementation.

=item *

Speed up AV and HV clearing/undeffing.

=item *

Better optimise array and hash assignment

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Time::HiRes> has been updated to use clockid_t.

=item *

L<Data::Dumper> the XS implementation now supports Deparse.

=item *

L<Unicode::Normalize> is now maintained by p5p and has been moved to dist/

=item *

L<Errno> Document that using C<%!> loads Errno for you.

=item *

L<Unicode::Collate> has been upgraded from version 1.14 to 1.18.

=item *

L<Math::BigInt> has been upgraded from version 1.999726(_01) to 1.999727.

There have also been some core customizations.

=item *

L<podlators> has been upgraded from version 4.08 to 4.09.

=item *

L<Archive::Tar> has been upgraded from version 2.16 to 2.18.

Capture STDERR when necessary.

Several minor updates.

=item *

L<Net::Ping> remove sudo from 500_ping_icmp.t.

Upgrade from version 2.51 to 2.55.

Avoid stderr noise in tests

Check for echo in new Net::Ping tests.

=item *

L<Test::Simple> has been upgraded from version 1.302059 to 1.302062.

=item *

L<Term::ANSIColor> has been upgraded from version 4.05 to 4.06.

=item *

L<Scalar::Utils> and L<List::Utils> have been customized in core.

=item *

L<Math::Complex> has been customized in core.

=item *

L<JSON::PP> Customized in core.

=item *

L<POSIX> Version Bump

=item *

L<Unicode::UCD> has had its documentation updated to give a recipe for
using it to get the information contained in F<unicore/Name.pl>.  It has
long been deprecated to use any file from F<unicore/>, and their
contents or even existence may change at any time without notice.

=item *

L<XXX> has been upgraded from version A.xx to B.yy.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

=head3 L<perlfunc>

=over 4

=item *

Defined on aggregates is no longer allowed. Perlfunc was still reporting it as
deprecated, and that it will be deleted in the future.

=back

=head3 L<perldata>

=over 4

=item *

Use of single character variables, with the variable name a non printable
character in the range \x80-\xFF is no longer allowed. Update the docs to
reflect this.

=back

=head3 L<perlobj>

=over 4

=item *

Added a section on calling methods using their fully qualified names.

=item *

Do not discourage manual @ISA.

=back

=head3 L<perlop>

=over 4

=item *

Clarify behavior single quote regexps.

=back

=head3 L<perllocale>

=over 4

=item *

Some locales aren't compatible with Perl.  Note the potential bad
consequences of using them.

=back

=head3 L<perldiag>

=over 4

=item *

Deprecations are to be marked with a D.
C<"%s() is deprecated on :utf8 handles"> use a deprecation message, and as
such, such be marked C<"(D deprecated)"> and not C<"(W deprecated)">.

=back

=head3 L<perlguts>

=over 4

=item *

add pTHX_ to magic method examples.

=back

=head3 L<perlvar>

=over 4

=item *

Document @ISA. Was documented other places, not not in perlvar.

=back

=head3 L<perlootut>

=over 4

=item *

Tidy the document.

=item *

Mention Moo more.

=back

=head3 L<perlhack>

=over 4

=item *

Document Tab VS Space.

=back

=head3 L<perlre>

=over 4

=item *

Don't impugn the stability of all (?…) constructs.

=item *

Summarise full syntax for (?(cond)then|else) constructs.

=item *

Minor tweaks and formatting changes.

=item *

perlre: regularise list items

=item *

Document the package for C<$REGMARK> and C<$REGERROR>.

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

Improve error for missing tie() package/method. This brings the error messages
in line with the ones used for normal method calls, despite not using
call_method().

=item *

Make the sysread()/syswrite/() etc :utf8 handle warnings default. These
warnings were under 'deprecated' previously.

=item *

'do' errors now refer to 'do' (not 'require').

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directory F<utils>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

Porting/pod_lib.pl

Removed spurious executable bit.

Account for possibility of DOS file endings.

=item *

perf/benchmarks

Tidy file, rename some symbols.

=item *

Porting/checkAUTHORS.pl

Replace obscure character range with \w.

=item *

t/porting/regen.t

try to be more helpful when tests fail.

=item *

utils/h2xs.PL

Avoid infinite loop for enums.

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

Remove "Warning: perl appears in your path"

This install warning is more or less obsolete, since most platforms already
*will* have a /usr/bin/perl or similar provided by the OS.

=item *

Reduce verbosity of "make install.man"

Previously, two progress messages were emitted for each manpage: one by
installman itself, and one by the function in install_lib.pl that it calls to
actually install the file. Disabling the second of those in each case saves
over 750 lines of unhelpful output.

=item *

Cleanup for clang -Weverything support. [perl 129961]

=item *

Configure: signbit scan was assuming too much, stop assuming negative 0.

=item *

Various compiler warnings have been silenced.

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

XS-APItest/t/utf8.t: Several small fixes and enhancements.

=item *

Tests for locales were erroneously using locales incompatible with Perl.

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=item Darwin

don't treat -Dprefix=/usr as special, instead require an extra option
-Ddarwin_distribution to produce the same results.

=item POSIX

Finish removing POSIX deprecated functions.

=item OS X

OS X El Capitan doesn't implement the clock_gettime() or clock_getrez() APIs,
emulate them as necessary.

=item macOS

Deprecated syscall(2) on macOS 10.12.

=item EBCDIC

Several tests have been updated to work (or be skipped) on EBCDIC platforms.

=item HP-UX

L<Net::Ping> UDP test is skipped on HP-UX.

=item VMS

Move _pDEPTH and _aDEPTH after config.h otherwise DEBUGGING may not be defined
yet.

=item VMS And Win32

Fix some breakage, add 'undef' value for default_inc_excludes_dot in build
scripts.

=item Linux

Drop support for Linux a.out Linux has used ELF for over twenty years.

=item NetBSD-VAX

Test fixes and minor updates.

Account for lack of C<inf>, C<nan>, and C<-0.0> support.

=item Win32

fp definitions have been updated.

=item OpenBSD 6

OpenBSD 6 still does not support returning pid, gid or uid with SA_SIGINFO.
Make sure this is accounted for.

=item FreeBSD

t/uni/overload.t: Skip hanging test on FreeBSD.

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item VMS

VAXC has not been a possibility for a good long while, and the versions of the
DEC/Compaq/HP/VSI C compiler that report themselves as "DEC" in a listing file
are 15 years or more out-of-date and can be safely desupported.

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

Handle SvIMMORTALs in LHS of list assign. [perl #129991]

=item *

[perl #130010] a5540cf breaks texinfo

This involved user-defined Unicode properties.

=item *

Fix error message for unclosed C<\N{> in regcomp.

An unclosed C<\N{> could give the wrong error message
C<"\N{NAME} must be resolved by the lexer">.

=item *

List assignment in list context where the LHS contained aggregates and
where there were not enough RHS elements, used to skip scalar lvalues.
Previously, C<(($a,$b,@c,$d) = (1))> in list context returned C<($a)>; now
it returns C<($a,$b,$d)>. C<(($a,$b,$c) = (1))> is unchanged: it still
returns <($a,$b,$c)>. This can be seen in the following:

    sub inc { $_++ for @_ }
    inc(($a,$b,@c,$d) = (10))

Formerly, the values of C<($a,$b,$d)> would be left as C<(11,undef,undef)>;
now they are C<(11,1,1)>.

=item *

[perl 129903]

The basic problem is that code like this: /(?{ s!!! })/ can trigger infinite
recursion on the C stack (not the normal perl stack) when the last successful
pattern in scope is itself. Since the C stack overflows this manifests as an
untrappable error/segfault, which then kills perl.

We avoid the segfault by simply forbidding the use of the empty pattern when it
would resolve to the currently executing pattern.

=item *

[perl 128997] Avoid reading beyond the end of the line buffer when there's a
short UTF-8 character at the end.

=item *

[perl 129950] fix firstchar bitmap under utf8 with prefix optimisation.

=item *

[perl 129954] Carp/t/arg_string.t: be liberal in f/p formats.

=item *

[perl 129928] make do "a\0b" fail silently instead of throwing.

=item *

[perl 129130] make chdir allocate the stack it needs.

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Errata From Previous Releases

=over 4

=item *

XXX Add anything here that we forgot to add, or were mistaken about, in
the perldelta of a previous release.

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.25.5..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
